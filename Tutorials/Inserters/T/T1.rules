Part : <../../../Hyperoid/base_part_hyperoid.rules>/Part
{
	NameKey = "Codex/NoText"
	DescriptionKey = "Codex/NoText"
	ID = T.janiTNT.1 // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	SelectionTypeID = "T"
	EditorGroup = "Defenses"
	Resources = []
	MaxHealth = 1000 * 16*16 * 40
	ReceivableBuffs : ^/0/ReceivableBuffs []
	TypeCategories = [corridor]
	IsCrewSalvageable = false
	Density = 400
	IsExternal = true
	ExternalWalls = [None]
	InternalWalls = [All]
	FlipHRotate = [1, 0, 3, 2]
	FlipVRotate = [3, 2, 1, 0]
	IsWalled = false
	
	IsBuildable = false
	
	EditorIcon
	{
		Texture = "./Data/ships/terran/corridor/icon.png"
		Size = [32, 32]
	}
	Components : ^/0/Components
	{
	
		SpriteGridMain
		{
			Type = SpriteGrid
			RandomUVRotation = true
			Layer = "sr"
			Location = [0.5*0.25, 0.5*0.25]
			GridSpacing = [0.25, 0.25]
			GridSize = [4, 4]
			RandomDamageLevels
			[
				[//Default
					{File = "roof.png";NormalsFile = "roof_n1.png";Size = [0.25, 0.25]}
				]
				
			]
		}
		
		TDEMAND // Needed to be referenced by proxies
		{
			Type = StaticToggle
			ToggleOn = true
		}
		
		
		/*{
			PartCriteria // for handling edges and stuff i think
			{
				Category = corridor
				Rot = 2 //is perfectly aligned
				Right = 0
				Bottom = 5
			}
			ComponentID = TDEMAND
		}*/
		
		TopProxy
		{
			Type = ToggleProxy
			PartLocation = [0, -1]
			//InvertProxyToggle = true
			ComponentID = TDEMAND
			ProxyableComponents
			[
				{
					PartCriteria
					{
						Category = corridor
					}
					ComponentID = TDEMAND
				}
			]
		}		
		TopRightProxy : TopProxy
		{
			PartLocation = [1, -1]
		}
		RightProxy : TopProxy
		{
			PartLocation = [1, 0]
		}
		BottomRightProxy : TopProxy
		{
			PartLocation = [1, 1]
		}
		BottomProxy : TopProxy
		{
			PartLocation = [0, 1]
		}
		BottomLeftProxy : TopProxy
		{
			PartLocation = [-1, 1]
		}
		LeftProxy : TopProxy
		{
			PartLocation = [-1, 0]
		}
		TopLeftProxy : TopProxy
		{
			PartLocation = [-1, -1]
		}
		/*TopTopRightIsFlat
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = TopProxy, invert = true}
				{Toggle = TopRightProxy, invert = true}
				{Toggle = RightProxy, invert = true}
			]
			Mode = All
		}
		CornerTopRight
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = TopProxy, invert = true}
				{Toggle = TopRightProxy, invert = true}
				{Toggle = RightProxy, invert = true}
			]
			Mode = All
		}*/
		
		TopWallsComponents
		{
			Type = ToggledComponents
			Toggle = TopProxy
			Invert = true
			Components
			{
				SpriteGridTopWall
				{
					Type = SpriteGrid
					RandomUVRotation = false
					Layer = "sw"
					Location = [0.5*0.0625, -0.5*0.0625]
					GridSpacing = [0.0625, 0.0625]
					GridSize = [16, 1]
					TrueRotation = 2
					RandomDamageLevels
					[
						[//Default
							{File = "external04.png";NormalsFile = "external_normals04.png";Size = [0.0625, 0.0625]; UVRotation = &../../../TrueRotation}
						]
						
					]
				}
			}
		}
		
		RightWallsComponents : TopWallsComponents
		{
			Toggle = RightProxy
			Components
			{
				SpriteGridRightWall : ../../TopWallsComponents/Components/SpriteGridTopWall
				{
					GridSize = [1, 16]
					Location = [16.5*0.0625, 0.5*0.0625]
					TrueRotation = 3
					RandomDamageLevels
					[
						[//Default
							{File = "external04.png";NormalsFile = "external_normals04.png";Size = [0.0625, 0.0625]; UVRotation = &../../../TrueRotation}
						]
					]
				}
			}
		}
		
		BottomWallsComponents : TopWallsComponents
		{
			Toggle = BottomProxy
			Components
			{
				SpriteGridBottomWall : ../../TopWallsComponents/Components/SpriteGridTopWall
				{
					GridSize = [16, 1]
					Location = [0.5*0.0625, 16.5*0.0625]
					TrueRotation = 0
					RandomDamageLevels
					[
						[//Default
							{File = "external04.png";NormalsFile = "external_normals04.png";Size = [0.0625, 0.0625]; UVRotation = &../../../TrueRotation}
						]
					]
				}
			}
		}
		
		LeftWallsComponents : TopWallsComponents
		{
			Toggle = LeftProxy
			Components
			{
				SpriteGridLeftWall : ../../TopWallsComponents/Components/SpriteGridTopWall
				{
					GridSize = [1, 16]
					Location = [-0.5*0.0625, 0.5*0.0625]
					TrueRotation = 1
					RandomDamageLevels
					[
						[//Default
							{File = "external04.png";NormalsFile = "external_normals04.png";Size = [0.0625, 0.0625]; UVRotation = &../../../TrueRotation}
						]
					]
				}
			}
		}
		
		EngineHum
		{
			Type = ContinuousEffects
			Location = [.5, .5]
			MediaEffects
			[
				{
					Sound = "Patricia Taxxon - DEDGDEDCDEDGEOEGECGHGCGOCTCOCHOTOHOTHTHTHT_clip_seamless.wav"
					Volume = .25
					Speed = 1
					Type = Audio
					DynamicVolume
					{
						MinDistance = 0
						MaxDistance = 2
						DistanceFalloff = 3

						MinZoom = 1
						MaxZoom = 800
						ZoomFalloff = 1
					}

					DynamicFilter
					{
						MinDistance = 0
						MaxDistance = 2
						DistanceFalloff = 2

						MinZoom = 1
						MaxZoom = 800
						ZoomFalloff = 1

						Filter
						{
							FilterType = LowPassAmplify
							FromFrequency = 7350
							ToFrequency = 2000
							FrequencyFactorExponent = 0.5
						}
					}

					MaxConcurrent = 1
					MaxConcurrentVolume = .25
					AllowStacking = false
					OnlyWhenInSight = false
					ConcurrencyMode = PerShip
				}
			]
		}

		Blueprints = &<./Data/ships/terran/corridor/corridor.rules>/Part/Components/Blueprints
		//BlueprintWalls = &<./Data/ships/terran/corridor/corridor.rules>/Part/Components/BlueprintWalls
	}
	Stats
	{
		CrewSpeed = []
		Size = []
		Weight = []
		HP = []
		PenResist = []
	}
}