Part
{
	Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle]
			Mode = All
		}

		LogicSignal
		{
			Type = BuffToggle
			BuffType = Logic
		}

		ColorPicker1
		{
			Type = UIColor
			ColorID = "strutcolor"
			Default = Black
		}
		
		ColorPicker2
		{
			Type = UIColor
			ColorID = "roof_light"
			Default = White
		}
		
		ColorPicker3
		{
			Type = UIColor
			ColorID = "hullpartscolor"
			Default = White
		}

		LengthSelect
		{
			Type = UIToggle
			ToggleID = "advships_length_value"
			Default = 0
			AlwaysAllowInBuildMode = true
		}
		
		ZeroLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 0
		}
		ZeroLength_L
		{
			Type = ToggledComponents
			Toggle = ZeroLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 2]
					Location = [0.5, -1.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -2.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -2.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -2.5]
						}
					}
				}
			}
		}
		
		OneLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 1
		}
		OneLength_L
		{
			Type = ToggledComponents
			Toggle = OneLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 3]
					Location = [0.5, -2.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -3.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -3.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -3.5]
						}
					}
				}
			}
		}
		
		TwoLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 2
		}
		TwoLength_L
		{
			Type = ToggledComponents
			Toggle = TwoLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 4]
					Location = [0.5, -3.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -4.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -4.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -4.5]
						}
					}
				}
			}
		}
		
		ThreeLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 3
		}
		ThreeLength_L
		{
			Type = ToggledComponents
			Toggle = ThreeLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 5]
					Location = [0.5, -4.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -5.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -5.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -5.5]
						}
					}
				}
			}
		}
		
		FourLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 4
		}
		FourLength_L
		{
			Type = ToggledComponents
			Toggle = FourLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 6]
					Location = [0.5, -5.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -6.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -6.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -6.5]
						}
					}
				}
			}
		}
		
		FiveLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 5
		}
		FiveLength_L
		{
			Type = ToggledComponents
			Toggle = FiveLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 7]
					Location = [0.5, -6.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -7.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -7.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -7.5]
						}
					}
				}
			}
		}
		
		SixLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 6
		}
		SixLength_L
		{
			Type = ToggledComponents
			Toggle = SixLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 8]
					Location = [0.5, -7.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -8.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -8.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -8.5]
						}
					}
				}
			}
		}
		
		SevenLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 7
		}
		SevenLength_L
		{
			Type = ToggledComponents
			Toggle = SevenLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 9]
					Location = [0.5, -8.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -9.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -9.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -9.5]
						}
					}
				}
			}
		}
		
		EightLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 8
		}
		EightLength_L
		{
			Type = ToggledComponents
			Toggle = EightLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 10]
					Location = [0.5, -9.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -10.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -10.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -10.5]
						}
					}
				}
			}
		}
		
		NineLengthToggle_L
		{
			Type = ModeToggle
			Mode = LengthSelect
			OnMode = 9
		}
		NineLength_L
		{
			Type = ToggledComponents
			Toggle = NineLengthToggle_L
			Components
			{
				NeckSpriteGrid : ~/NeckSpriteGridBase
				{
					GridSize = [1, 11]
					Location = [0.5, -10.5]
				}
				DockGraphics : ~/DockGraphicsBase
				{
					GetColorFrom = ColorPicker3
					Location = [0.5, -11.5]
				}
				ColliderComponents
				{
					Type = ToggledComponents
					Toggle = IsOperational
					Components
					{
						EmitterCollider1 : ~/EmitterColliderBase
						{
							Location = [0.5, -11.5]
						}
						EmitterCollider2 = &EmitterCollider1
						EmitterCollider3 = &EmitterCollider1
						OperationalGraphics : ~/OperationalGraphicsBase
						{
							GetColorFrom = ColorPicker2
							Location = [0.5, -11.5]
						}
					}
				}
			}
		}

		BlueprintsCapOne
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
			Offset = [0, -3]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 0
			}
		}
		BlueprintsMidOne
		{
			Type = BlueprintSprite
			File = "../../Structure/background_structure_small/blueprints.png"
			UVRotation = 1
			Size = [1, 1]
			Offset = [0, -1]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 0
			}
		}
		BlueprintsCapTwo : &BlueprintsCapOne
		{
			Offset = [0, -4]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 1
			}
		}
		BlueprintsMidTwo
		{
			Type = BlueprintSprite
			File = "../../Structure/background_structure/blueprints.png"
			UVRotation = 1
			Size = [1, 2]
			Offset = [0, -1.5]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 1 //[1,2,3,4,5,6,7,8,9]
			}
		}
		BlueprintsCapThree : &BlueprintsCapOne
		{
			Offset = [0, -5]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 2
			}
		}
		BlueprintsMidThree
		{
			Type = BlueprintSprite
			File = "blueprints_pain_3.png"
			UVRotation = 1
			Size = [1, 3]
			Offset = [0, -2]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 2
			}
		}
		BlueprintsCapFour : &BlueprintsCapOne
		{
			Offset = [0, -6]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 3
			}
		}
		BlueprintsMidFour
		{
			Type = BlueprintSprite
			File = "blueprints_pain_4.png"
			UVRotation = 1
			Size = [1, 4]
			Offset = [0, -2.5]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 3 //[3,4,5,6,7,8,9]
			}
		}
		BlueprintsCapFive : &BlueprintsCapOne
		{
			Offset = [0, -7]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 4
			}
		}
		BlueprintsMidFive
		{
			Type = BlueprintSprite
			File = "blueprints_pain_5.png"
			UVRotation = 1
			Size = [1, 5]
			Offset = [0, -3]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 4
			}
		}
		BlueprintsCapSix : &BlueprintsCapOne
		{
			Offset = [0, -8]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 5
			}
		}
		BlueprintsMidSix
		{
			Type = BlueprintSprite
			File = "blueprints_pain_6.png"
			UVRotation = 1
			Size = [1, 6]
			Offset = [0, -3.5]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 5 //[5,6,7,8,9]
			}
		}
		BlueprintsCapSeven : &BlueprintsCapOne
		{
			Offset = [0, -9]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 6
			}
		}
		BlueprintsMidSeven
		{
			Type = BlueprintSprite
			File = "blueprints_pain_7.png"
			UVRotation = 1
			Size = [1, 7]
			Offset = [0, -4]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 6
			}
		}
		BlueprintsCapEight : &BlueprintsCapOne
		{
			Offset = [0, -10]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 7
			}
		}
		BlueprintsMidEight
		{
			Type = BlueprintSprite
			File = "blueprints_pain_8.png"
			UVRotation = 1
			Size = [1, 8]
			Offset = [0, -4.5]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 7 //[7,8,9]
			}
		}
		BlueprintsCapNine : &BlueprintsCapOne
		{
			Offset = [0, -11]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 8
			}
		}
		BlueprintsMidNine
		{
			Type = BlueprintSprite
			File = "blueprints_pain_9.png"
			UVRotation = 1
			Size = [1, 9]
			Offset = [0, -5]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 8
			}
		}
		BlueprintsCapTen : &BlueprintsCapOne
		{
			Offset = [0, -12]
			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 9
			}
		}
		BlueprintsMidTen
		{
			Type = BlueprintSprite
			File = "blueprints_pain_10.png"
			UVRotation = 1
			Size = [1, 10]
			Offset = [0, -5.5]

			ShowOnlyInToggleMode
			{
				ToggleID = advships_length_value
				Mode = 9
			}
		}
	}
}

NeckSpriteGridBase
{
	Type = SpriteGrid
	Location = [.5, -.5]
	//GridSpacing = [0.25, 0.25]
	GetColorFrom = ColorPicker1
	GridSize = [1, 1]
	RandomDamageLevels
	[
		[
			{
				File = "../../Structure/background_structure_small/floor.png"
				NormalsFile = "../../Structure/background_structure_small/normals.png"
				UVRotation = 1
				Size = [1, 1]
			}
			{
				File = "../../Structure/background_structure_small/floor_33.png"
				NormalsFile = "../../Structure/background_structure_small/normals_33.png"
				UVRotation = 1
				Size = [1, 1]
			}
			{
				File = "../../Structure/background_structure_small/floor_66.png"
				NormalsFile = "../../Structure/background_structure_small/normals_66.png"
				UVRotation = 1
				Size = [1, 1]
			}
		]
	]
	RandomUVRotation = false
	Layer = "structure"
}

EmitterColliderBase
{
	Type = CircleCollider
	Location = [0.5, -2.5]
	Radius = 0.8
	Density = .1
}
OperationalGraphicsBase
{
	Type = Graphics
	Location = [0.5, -2.5]
	GetColorFrom = ColorPicker2
	OperationalRoofDoodad
	{
		Layer = "doodads_high"
		Offset = [0, 0]
		DamageLevels
		[
			{
				File = "../Dock_lights.png"
				Size = [3, 3]
			}
		]
	}
	OperationalRoofLighting
	{
		Layer = "roof_lights_fancy"
		DamageLevels
		[
			{
				File = "../Dock_lights_fancy.png"
				Size = [3, 3]
				Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
				VertexColor = [255*4.5, 255*4.5, 255*4.5]
			}
		]
	}
}

DockGraphicsBase
{
	Type = Graphics
	Location = [0.5, -2.5]
	GetColorFrom = ColorPicker3
	Floor
	{
		Layer = "weapons"
		DamageLevels
		[
			{
				File = "../Dock.png"
				NormalsFile = "../Dock_n.png"
				Size = [3, 3]
			}
			/*{
				File = "floor_33.png"
				NormalsFile = "normals_33.png"
				Size = [3, 3]
			}
			{
				File = "floor_66.png"
				NormalsFile = "normals_66.png"
				Size = [3, 3]
			}*/
		]
	}
}