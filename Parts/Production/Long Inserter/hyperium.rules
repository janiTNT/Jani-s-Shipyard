Resource = hyperium
ResourceStorage = HyperiumStorage
CarrySize = (&<./data/resources/hyperium/hyperium.rules>/MaxPerNugget)
LightColor = [75, 245, 255]
//CarrySize = 1
Components
{
	ConvertPermission
	{
		Type = MultiToggle
		Toggles = [IsOperational, FromProxy]
		Mode = All
	}
	
	FromProxy
	{
		Type = ResourceStorageProxy
		ResourceType = &~/Resource
		PartLocation = [0, 2]
		//PartCriteria
		//{
		//	Category = thermal
		//}
		ComponentID = &~/ResourceStorage
	}
	
	ToProxy
	{
		Type = ResourceStorageProxy
		ResourceType = &~/Resource
		PartLocation = [0, -2]
		//PartCriteria
		//{
		//	Category = thermal
		//}
		ComponentID = &~/ResourceStorage
	}
	
	ResourceConverter
	{
		Type = ResourceConverter
		OperationalToggle = ConvertPermission
		From
		[
			{
				Storage = FromProxy
				Quantity = (&~/CarrySize)
				MinQuantityForConversion = (&~/CarrySize)
			}
			{
				Storage = BatteryStorage
				Quantity = 250
				MinQuantityForConversion = 1
			}
		]
		To
		[
			{
				Storage = ToProxy
				Quantity = (&~/CarrySize)
				MinQuantityForConversion = (&~/CarrySize)
			}
		]
		//ToStorage = ToProxy
		//ToQuantity = 1
		Interval = 1 //1.5  * 0.75
	}
	
	Graphics
	{
		Type = Graphics
		Location = [.5, .5]
		OperationalToggle = IsOperational
		OperationalLighting
		{
			Layer = "lights_add"
			DamageLevels
			[
				{
					File = "../Inserter/lights.png"
					Size = [1, 1]
					VertexColor = &~/LightColor
				}
			]
		}
	}
}