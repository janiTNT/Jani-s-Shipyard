Part : <./data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/LogicRoofPanel"
	IconNameKey = "Parts/LogicRoofPanelIcon"
	ID = janiTNT.roof_panel_logic // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Utilities"
	DescriptionKey = "Parts/LogicRoofPanelDesc"
	Resources
	[
		[steel, 4]
		[coil, 2]
	]
	TypeCategories = [uses_power]
	Flammable = false
	ReceivableBuffs : ^/0/ReceivableBuffs []
	Size = [1, 1]
	MaxHealth = 1000
	AllowedDoorLocations = []
	ForceBrushCompatibility = false
	EditorIcon
	{
		Texture
		{
			File = "floor.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [CommandToggle]
			Mode = All
		}

		ColorPicker
		{
			Type = UIColor
			ColorID = "roof_light"
			Default = White
		}

		LightStrength
		{
			Type = UIToggle
			ToggleID = "light_strength"
			Default = 0
		}
		
		LightShape
		{
			Type = UIToggle
			ToggleID = "missile_type"
			Default = 0
		}

		CommandToggle
		{
			Type = CommandToggle
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
				]
			}
			Roof = &<./data/ships/terran/corridor/corridor.rules>/Part/Components/Graphics/Roof
		}
		LightLowToggle = &<./data/ships/terran/roof_light/roof_light.rules>/Part/Components/LightLowToggle
		LightMedToggle = &<./data/ships/terran/roof_light/roof_light.rules>/Part/Components/LightMedToggle
		LightHighToggle = &<./data/ships/terran/roof_light/roof_light.rules>/Part/Components/LightHighToggle
		
		SmallSquareToggle
		{
			Type = ModeToggle
			Mode = LightShape
			OnMode = 0
		}
		SmallSquareComponents
		{
			Type = ToggledComponents
			Toggle = SmallSquareToggle
			Components
			{
				NubGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					Floor
					{
						Layer = "roof_doodads"
						DamageLevels
						[
							{
								File = "low1.png"
								Size = [1, 1]
							}
						]
					}
					Walls
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat1_off.png"
								Size = [1, 1]
							}
						]
					}
				}
				
				LightLowComponents
				{
					Type = ToggledComponents
					Toggle = LightLowToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat1.png"
										Size = [1, 1]
									}
								]
							}
						}
					}
				}
				LightMedComponents
				{
					Type = ToggledComponents
					Toggle = LightMedToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat1.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light1.png"
										Size = [4*1.5, 4*1.5]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy1.png"
										Size = [5*1.5, 5*1.5]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
				LightHighComponents
				{
					Type = ToggledComponents
					Toggle = LightHighToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat1.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light1.png"
										Size = [4*2, 4*2]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy1.png"
										Size = [5*2, 5*2]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
			}
		}
		
		LargeSquareToggle
		{
			Type = ModeToggle
			Mode = LightShape
			OnMode = 1
		}
		LargeSquareComponents
		{
			Type = ToggledComponents
			Toggle = LargeSquareToggle
			Components
			{
				NubGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					Floor
					{
						Layer = "roof_doodads"
						DamageLevels
						[
							{
								File = "low2.png"
								Size = [2, 2]
							}
						]
					}
					Walls
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat2_off.png"
								Size = [1, 1]
							}
						]
					}
				}
				
				LightLowComponents
				{
					Type = ToggledComponents
					Toggle = LightLowToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat2.png"
										Size = [1, 1]
									}
								]
							}
						}
					}
				}
				LightMedComponents
				{
					Type = ToggledComponents
					Toggle = LightMedToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat2.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light2.png"
										Size = [4*1.5, 4*1.5]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy2.png"
										Size = [5*1.5, 5*1.5]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
				LightHighComponents
				{
					Type = ToggledComponents
					Toggle = LightHighToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat2.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light2.png"
										Size = [4*2, 4*2]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy2.png"
										Size = [5*2, 5*2]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
			}
		}
		CircleToggle
		{
			Type = ModeToggle
			Mode = LightShape
			OnMode = 2
		}
		CircleComponents
		{
			Type = ToggledComponents
			Toggle = CircleToggle
			Components
			{
				NubGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					Floor
					{
						Layer = "roof_doodads"
						DamageLevels
						[
							{
								File = "low3.png"
								Size = [1, 1]
							}
						]
					}
					Walls
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat3_off.png"
								Size = [1, 1]
							}
						]
					}
				}
				
				LightLowComponents
				{
					Type = ToggledComponents
					Toggle = LightLowToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat3.png"
										Size = [1, 1]
									}
								]
							}
						}
					}
				}
				LightMedComponents
				{
					Type = ToggledComponents
					Toggle = LightMedToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat3.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light3.png"
										Size = [4*1.5, 4*1.5]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy3.png"
										Size = [5*1.5, 5*1.5]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
				LightHighComponents
				{
					Type = ToggledComponents
					Toggle = LightHighToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat3.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light3.png"
										Size = [4*2, 4*2]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy3.png"
										Size = [5*2, 5*2]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
			}
		}
		
		WedgeToggle
		{
			Type = ModeToggle
			Mode = LightShape
			OnMode = 3
		}
		WedgeComponents
		{
			Type = ToggledComponents
			Toggle = WedgeToggle
			Components
			{
				NubGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					Floor
					{
						Layer = "roof_doodads"
						DamageLevels
						[
							{
								File = "low4.png"
								Size = [1, 1]
							}
						]
					}
					Walls
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat4_off.png"
								Size = [1, 1]
							}
						]
					}
				}
				
				LightLowComponents
				{
					Type = ToggledComponents
					Toggle = LightLowToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat4.png"
										Size = [1, 1]
									}
								]
							}
						}
					}
				}
				LightMedComponents
				{
					Type = ToggledComponents
					Toggle = LightMedToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat4.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light4.png"
										Size = [4*1.5, 4*1.5]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy4.png"
										Size = [5*1.5, 5*1.5]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
				LightHighComponents
				{
					Type = ToggledComponents
					Toggle = LightHighToggle
					Components
					{
						ColoredGraphics
						{
							Type = Graphics
							Location = [.5, .5]
							OperationalToggle = IsOperational
							GetColorFrom = ColorPicker
							OperationalLighting
							{
								Layer = "lights_add"
								DamageLevels
								[
									{
										File = "lights.png"
										Size = [1, 1]
									}
								]
							}
							OperationalDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "flat4.png"
										Size = [1, 1]
									}
								]
							}
							OperationalRoofDoodad
							{
								Layer = "roof_turrets"
								DamageLevels
								[
									{
										File = "roof_light4.png"
										Size = [4*2, 4*2]
									}
								]
							}
							OperationalRoofLighting
							{
								Layer = "roof_lights_fancy"
								DamageLevels
								[
									{
										File = "roof_light_fancy4.png"
										Size = [5*2, 5*2]
										Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
										VertexColor = [255*1, 255*1, 255*1]
									}
								]
							}
						}
					}
				}
			}
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyedDry
			Location = [.5, .5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "floor.png"
			Size = [1, 1]
		}
	}
}