Part : <./data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/LogicRoofPanelWedge"
	IconNameKey = "Parts/LogicRoofPanelWedgeIcon"
	ID = janiTNT.roof_panel_logic_wedge // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroups = ["Logic", "Utilities"]
	DescriptionKey = "Parts/LogicRoofPanelWedgeDesc"
	Resources
	[
		[steel, 4]
		[coil, 3]
	]
	TypeCategories = [logic]
	Flammable = false
	ReceivableBuffs : ^/0/ReceivableBuffs [Logic]
	SelectionTypeID = "lightpanel"
	Size = [1, 1]
	MaxHealth = 1000
	ForceBrushCompatibility = true
	FlipHRotate = [1, 0, 3, 2]
	FlipVRotate = [3, 2, 1, 0]
	EditorIcon
	{
		Texture
		{
			File = "icon4.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [XorFinal, CommandToggle]
			Mode = All
		}

		LogicSignal
		{
			Type = BuffToggle
			BuffType = Logic
		}
		
		InvertInput
		{
			Type = UIToggle
			ToggleID = "skipydog_invert_input_toggle"
			Default = 0
		}
//|||||||||||||||||||||||| XOR ||||||||||||||||||||||||
		XorToggle1
		{
			Type = MultiToggle
			Toggles = [LogicSignal, InvertInput]
			Invert = true
			Mode = Any
		}
		XorToggle2
		{
			Type = MultiToggle
			Toggles = [LogicSignal, InvertInput]
			Invert = false
			Mode = All
		}
		XorFinal
		{
			Type = MultiToggle
			Toggles = [XorToggle2, XorToggle1]
			Invert = true
			Mode = Any
		}

		ColorPicker
		{
			Type = UIColor
			ColorID = "true_color_fullrange"
			Default = White
		}

		LightStrength
		{
			Type = UIToggle
			ToggleID = "light_strength"
			Default = 0
		}

		CommandToggle
		{
			Type = CommandToggle
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
				]
			}
			Roof = &<./data/ships/terran/corridor/corridor.rules>/Part/Components/Graphics/Roof
		}
		LightLowToggle = &<./data/ships/terran/roof_light/roof_light.rules>/Part/Components/LightLowToggle
		LightMedToggle = &<./data/ships/terran/roof_light/roof_light.rules>/Part/Components/LightMedToggle
		LightHighToggle = &<./data/ships/terran/roof_light/roof_light.rules>/Part/Components/LightHighToggle

		NubGraphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "low4.png"
						Size = [2, 2]
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "flat4_off.png"
						Size = [1, 1]
					}
				]
			}
		}
		
		LightLowComponents
		{
			Type = ToggledComponents
			Toggle = LightLowToggle
			Components
			{
				ColoredGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					GetColorFrom = ColorPicker
					DoodadToggle = IsOperational
					ToggleOnDoodad
					{
						Layer = "doodads_low"
						DamageLevels
						[
							{
								File = "doodads.png"
								Size = [1, 1]
							}
						]
					}
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "lights.png"
								Size = [1, 1]
							}
						]
					}
					OperationalDoodad
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat4.png"
								Size = [1, 1]
							}
						]
					}
				}
			}
		}
		LightMedComponents
		{
			Type = ToggledComponents
			Toggle = LightMedToggle
			Components
			{
				ColoredGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					GetColorFrom = ColorPicker
					DoodadToggle = IsOperational
					ToggleOnDoodad
					{
						Layer = "doodads_low"
						DamageLevels
						[
							{
								File = "doodads.png"
								Size = [1, 1]
							}
						]
					}
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "lights.png"
								Size = [1, 1]
							}
						]
					}
					OperationalDoodad
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat4.png"
								Size = [1, 1]
							}
						]
					}
					OperationalRoofDoodad
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "roof_light4.png"
								Size = [4*1.5, 4*1.5]
							}
						]
					}
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "roof_light_fancy4.png"
								Size = [5*1.5, 5*1.5]
								Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*1, 255*1, 255*1]
							}
						]
					}
				}
			}
		}
		LightHighComponents
		{
			Type = ToggledComponents
			Toggle = LightHighToggle
			Components
			{
				ColoredGraphics
				{
					Type = Graphics
					Location = [.5, .5]
					OperationalToggle = IsOperational
					GetColorFrom = ColorPicker
					DoodadToggle = IsOperational
					ToggleOnDoodad
					{
						Layer = "doodads_low"
						DamageLevels
						[
							{
								File = "doodads.png"
								Size = [1, 1]
							}
						]
					}
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "lights.png"
								Size = [1, 1]
							}
						]
					}
					OperationalDoodad
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "flat4.png"
								Size = [1, 1]
							}
						]
					}
					OperationalRoofDoodad
					{
						Layer = "roof_turrets"
						DamageLevels
						[
							{
								File = "roof_light4.png"
								Size = [4*2, 4*2]
							}
						]
					}
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "roof_light_fancy4.png"
								Size = [5*2, 5*2]
								Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*1, 255*1, 255*1]
							}
						]
					}
				}
			}
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyedDry
			Location = [.5, .5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints4.png"
			Size = [1, 1]
		}
	}
}