Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/MiningBeam"
	IconNameKey = "Parts/MiningBeamIcon"
	ID = janiTNT.mining_laser_emitter // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = [juanTNT.mining_laser_emitter]//heh.
	EditorGroups = ["WeaponsEnergy", "Utilities"]
	DescriptionKey = "Parts/MiningBeamDesc"
	Resources
	[
		[steel, 48]//1200
		[coil, 28]//2800
		[diamond, 1]//4000
	]//Cost = 8000
	Size = [2, 3]
	MaxHealth = 6000
	TypeCategories = [weapon, uses_power, is_crewed, mining, miningbeam]
	ProhibitedBy : ^/0/ProhibitedBy [tall]
	ReceivableBuffs : ^/0/ReceivableBuffs [ElectronBuff]
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [42.66, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 3
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 10000 // TODO
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &<./Data/ships/base_ship.rules>/DefaultSalvagePriority
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 1.5]
			OperationalToggle = IsOperational
			Floor = &<./Data/ships/terran/mining_laser_small/mining_laser_small.rules>/Part/Components/Graphics/Floor
			OperationalDoodad = &<./Data/ships/terran/mining_laser_small/mining_laser_small.rules>/Part/Components/Graphics/OperationalDoodad
			OperationalLighting = &<./Data/ships/terran/mining_laser_small/mining_laser_small.rules>/Part/Components/Graphics/OperationalLighting
			Walls = &<./Data/ships/terran/mining_laser_small/mining_laser_small.rules>/Part/Components/Graphics/Walls
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_n.png"
						Size = [2, 3]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [1.75, 1.75]
						Z = 1 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*1.0, 0, 0]
					}
				]
			}
		}
		
		WeaponGraphics
		{
			Type = Graphics
			//ChainedTo = Turret
			Location = [1, 1.5]
			//Rotation = 90d
			OperationalToggle = IsOperational
			DoodadToggle = BeamEmitter
			ShowToggledDoodadsWhenNotOperational = true
			ToggleOnDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"weapon_on1.png"
							"weapon_on2.png"
							"weapon_on3.png"
							"weapon_on4.png"
							"weapon_on5.png"
							"weapon_on6.png"
							"weapon_on7.png"
							"weapon_on8.png"
						]
						NormalsAnimationFiles
						[
							"weapon_n.png"
							"weapon_n.png"
							"weapon_n.png"
							"weapon_n.png"
							"weapon_n.png"
							"weapon_n.png"
							"weapon_n.png"
							"weapon_n.png"
						]
						Size = [1, 3]
						Offset = [0, 0]
						AnimationInterval = 0.02
						AnimationStartTime = Zero
					}
				]
			}
			ToggleOffDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "weapon.png"
						NormalsFile = "weapon_n.png"
						Size = [1, 3]
						Offset = [0, 0]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [0, 0.25]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [1.5, 1.5]
						Z = 1.0 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*1.0, 0, 0]
					}
				]
			}
		}
		
		Weapon
		{
			Type = FixedWeapon
			Location = [1, 11/64]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .2
			AIFirepowerRating = 1000
			Emitter = BeamEmitter
			CanSalvage = true
			AutoTargetCrewSafetyDist = 8
			ChainFireToggleComponent = MiningBeamChainToggle
			AllowEnemyStructureAutoTargeting = true
			ProhibitTargetPartsFilter = &FriendlyPrismFilter // Don't force fire on friendly ion prisms!
			SuppressWholeShipTargetOverlaysForPartsFilter = &FriendlyPrismFilter
			SuppressShipWideExplicitTargetsWhenTargetingPartsFilter = &FriendlyPrismFilter
			SuppressDirectControlWhenTargetingPartsFilter = &FriendlyPrismFilter
			SuppressFirepowerEstimationWhenTargetingPartsFilter = &FriendlyPrismFilter
			AutoExplicitTargetPartsFilter = &FriendlyPrismFilter
			SaveSelfTargetPartCategories = [mining_prism]
			FirePermissionToggle = FireModeToggle
			IgnoreSourceShipLowLOSChecks = true
			IgnoreJunkLOSChecks = true

			FriendlyPrismFilter
			{
				Enemies = false
				Junk = false
				OnlyPartCategories = [mining_prism]
			}
			
			AutoTarget
			{
				TargetType = ShipParts
				Toggle = AutoTargetToggle
			}

			CoverageLine
			{
				LineSprite
				{
					Texture = &/INDICATORS/RadialGradient
					VertexColor = [255, 255, 255, 191]
					UVRect = [.5, 0, 0, 1]
				}
				LineThickness = 2

				BeginCapSprite : LineSprite
				{
					UVRect = [0, 0, .5, 1]
				}
				BeginCapSize = [1, 2]

				EndCapSprite : LineSprite
				{
					UVRect = [.5, 0, .5, 1]
				}
				EndCapSize = [1, 2]
			}
		}

		WeaponCollider
		{
			Type = PolygonCollider
			Vertices
			[
				[48/64, 0.05]
				[80/64, 0.05]
				[48/64, 128/64]
				[80/64, 128/64]
			]
			Density = 1
			IsHigh = true
		}

		BeamEmitter : <beam.rules>
		{
			Type = BeamEmitter
			ChainedTo = Weapon
			FireTrigger = Weapon
			GetTargetFrom = Weapon
			OperationalToggle = IsOperational
			Duration = .5
			ResourceStorage = BatteryStorage
			ResourcesUsed = 125 * 2
			MinResourcesUsed = 1
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [1, 0.68]
			Rotation = 0d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &<./Data/ships/base_ship.rules>/DefaultSalvagePriority
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation/Location
			]
			CrewLocations
			[
				CrewLocation
			]
		}


		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 153/64]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			ResourceLevels = &<./Data/ships/terran/mining_laser_small/mining_laser_small.rules>/Part/Components/BatterySprites/ResourceLevels
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}
		
		/*TestEffects
		{
			Type = Sprite
			//IncludeWhenUnderConstruction = true
			//IncludeWhenNotUnderConstruction = false
			GetColorFrom = BatteryStorage
			Location = [-4, .5]
			AtlasSprite
			{
				File = "./data/ships/terran/structure/structure_mask_combined.png"
				NormalsFile = "./data/ships/terran/structure/structure_normals.png"
				Size = [1, 1]
				//VertexColor = [255, 0, 0, 255]
			}
			RandomUVRotation = false
			Layer = "structure_construction"
		}*/

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyedDry
			Location = [1, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					Delay = &~/Part/Components/Weapon/FireInterval
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 3]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerUsageContinuous
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/MiningBeam"
			Stats
			{
				DamagePerShot = (&~/Part/Components/BeamEmitter/HitOperational/HitEffects/1/Damage/Basevalue)
				HitInterval = &~/Part/Components/BeamEmitter/HitInterval
				DamageContinuousEnemies = (&DamagePerShot) / (&HitInterval)
				DamagePerShotJunk = (&~/Part/Components/BeamEmitter/HitOperational/HitEffects/2/Damage/BaseValue)
				DamageContinuousJunk = (&DamagePerShotJunk) / (&HitInterval)
				DamagePerShotAsteroids = (&~/Part/Components/BeamEmitter/HitOperational/HitEffects/4/Damage/BaseValue)
				DamageContinuousAsteroids = (&DamagePerShotAsteroids) / (&HitInterval)
				Range = &~/Part/Components/BeamEmitter/Range
				ShotSpeed = Infinity
				PowerPerShot = (&~/Part/Components/BeamEmitter/ResourcesUsed) / 1000
				PowerUsageContinuous = (&PowerPerShot) / (&~/Part/Components/Weapon/FireInterval)
			}
		}
	]
}