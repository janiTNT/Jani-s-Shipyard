Part : <./data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/DroneLauncherLarge"
	IconNameKey = "Parts/DroneLauncherLargeIcon"
	ID = janiTNT.drone_launcher_med // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = [juanTNT.drone_launcher]
	EditorGroup = "WeaponsProjectile"
	DescriptionKey = "Parts/DroneLauncherLargeDesc"
	Resources
	[
		[steel, 60]
		[coil2, 20]
		[processor, 3]
	]
	Size = [3, 5]
	PhysicalRect = [0, 1, 3, 4]
	RectColliderRectType = Normal
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 15000
	TypeCategories = [weapon, uses_power, uses_drones, uses_BFG, uses_launcher_parts, is_crewed]
	ReceivableBuffs : ^/0/ReceivableBuffs [AephiexAITerminal]
	ProhibitAbove = 2
	AllowedDoorLocations
	[
		//[-1, 2]
		//[3, 2]
		[-1, 3]
		[3, 3]
	]
	ExternalWallsByCell
	[
		{
			Key = [0, 1]
			Value = [TopLeft, Bottom, BottomLeft, Left]
		}
		{
			Key = [1, 1]
			Value = [Bottom]
		}
		{
			Key = [2, 1]
			Value = [TopRight, Right, BottomRight, Bottom]
		}
	]
	InternalWallsByCell
	[
		{
			Key = [0, 0]
			Value = [Left, TopLeft, Top]
		}
		{
			Key = [1, 0]
			Value = [Top]
		}
		{
			Key = [2, 0]
			Value = [Right, TopRight, Top]
		}
	]
	EditorIcon
	{
		Texture
		{
			File = "iconbase.png"
			SampleMode = Linear
		}
		Size = [46, 92]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, IsCrewedOrOperatedByAI__Aephiex]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
	

		/*DroneType
		{
			Type = UIToggle
			ToggleID = "dronetype"
			Default = 0
			AlwaysAllowInBuildMode = true
		}

		LaserToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 0
		}
		LaserComponents
		{
			Type = ToggledComponents
			Toggle = LaserToggle
			IncludeInBlueprints = true
			// &<LaserDrone/laserdrone.txt>/Components
			Components = &<LaserDrone/laserdrone.txt>/Components
		}

		BulletToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 1
		}
		BulletComponents
		{
			Type = ToggledComponents
			Toggle = BulletToggle
			IncludeInBlueprints = true
			Components = &<CannonDrone/cannondrone.txt>/Components
		}

		BeamToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 2
		}
		BeamComponents
		{
			Type = ToggledComponents
			Toggle = BeamToggle
			IncludeInBlueprints = true
			Components = &<BeamDrone/beamdrone.txt>/Components
		}

		RailToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 3
		}
		RailComponents
		{
			Type = ToggledComponents
			Toggle = RailToggle
			IncludeInBlueprints = true
			Components = &<RailDrone/raildrone.txt>/Components
		}
		
		MissileToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 4
		}
		MissileComponents
		{
			Type = ToggledComponents
			Toggle = MissileToggle
			IncludeInBlueprints = true
			Components = &<MissileDrone/missiledrone.txt>/Components
		}
		
		BFGToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 5
		}
		BFGComponents
		{
			Type = ToggledComponents
			Toggle = BFGToggle
			IncludeInBlueprints = true
			Components = &<BFGDrone/BFGdrone.txt>/Components
		}
		
		FireballToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 6
		}
		FireballComponents
		{
			Type = ToggledComponents
			Toggle = FireballToggle
			IncludeInBlueprints = true
			Components = &<FireballDrone/FireballDrone.txt>/Components
		}
		
		CombatToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 7
		}
		CombatComponents
		{
			Type = ToggledComponents
			Toggle = CombatToggle
			IncludeInBlueprints = true
			Components = &<MK3Drone/MK3combatdrone.txt>/Components
		}
		
		ShieldToggle
		{
			Type = ModeToggle
			Mode = DroneType
			OnMode = 8
		}
		ShieldComponents
		{
			Type = ToggledComponents
			Toggle = ShieldToggle
			IncludeInBlueprints = true
			Components = &<ShieldDrone/shielddrone.txt>/Components
		}
		
		CommonReloadTimer
		{
			Type = Timer
			Duration = 5
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonReloadResetTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTrigger
		}

		MissilesPrereqProxy
		{
			Type = ToggleProxy
			ComponentID = MissilesPrereq
		}*/
		
		SteelStorage
		{
			Type = ResourceStorage
			ResourceType = steel
			MaxResources = 40
			ToggleOnResources = 40
			ToggleOffResources = 39
			DelayBeforeReadyToUse = .5
			UITileRect = [.5 + 7/64, 1 + 7/64, 1 - 14/64, 1 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/MissileLoad
			DropResourcesWhenDestroyed = true
			DropResourcesWhenRemoved = true
		}
		
		SteelConsumer
		{
			Type = ResourceConsumer
			ResourceType = steel
			Storage = SteelStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			OperationalToggle = PowerToggle
			ConsumptionToggleButtonOffset = [0, -.4]
		}
		
		SteelProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = SteelStorage
			LowColor = [128, 128, 128]
			HighColor = [128, 128, 128]
			FullColor = [164, 164, 164]
			Height = 15
		}
		
		CoilStorage
		{
			Type = ResourceStorage
			ResourceType = coil
			MaxResources = 40
			ToggleOnResources = 40
			ToggleOffResources = 39
			DelayBeforeReadyToUse = .5
			UITileRect = [0 + 7/64, 1 + 7/64, 1 - 14/64, 1 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/MissileLoad
			DropResourcesWhenDestroyed = true
			DropResourcesWhenRemoved = true
		}
		
		CoilConsumer
		{
			Type = ResourceConsumer
			ResourceType = coil
			Storage = CoilStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			OperationalToggle = PowerToggle
			ConsumptionToggleButtonOffset = [0, -.4]
		}
		
		CoilProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = CoilStorage
			LowColor = [255, 128, 0]
			HighColor = [255, 128, 0]
			FullColor = [255, 180, 10]
			Height = 15
		}
		
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 12000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}
		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, 4.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			RangeLow = 0
			RangeHigh = 6000
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 1]
				}
				{
					File = "batteries3.png"
					Size = [1, 1]
				}
			]
		}	

		CrewLocation1
		{
			Type = CrewLocation
			Location = [.65, 4.44]
			Rotation = -180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2.35, 4.44]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			//HighPriorityPrerequisites = [MissilesPrereqProxy]
			CrewDestinations
			[
				[.65, 4.44]
				[2.35, 4.44]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}
		
		IsOperatedByAI__Aephiex
		{
			Type = BuffToggle
			BuffType = AephiexAITerminal
			MinBuffValue = &~/Part/Components/PartCrew/Crew
		}

		IsNotOperatedByAI__Aephiex
		{
			Type = MultiToggle
			Toggles = [ IsOperatedByAI__Aephiex ]
			Mode = All
			Invert = true
		}

		IsCrewedOrOperatedByAI__Aephiex
		{
			Type = MultiToggle
			Toggles = [ IsOperatedByAI__Aephiex, PartCrew ]
			Mode = Any
		}
		Graphics
		{
			Type = Graphics
			Location = [1.5, 2.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				Offset = [0, 1.5]
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				Offset = [0, 2]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../NukeSilo/doodads_on1.png"
							"../NukeSilo/doodads_on2.png"
							"../NukeSilo/doodads_on3.png"
							"../NukeSilo/doodads_on4.png"
							"../NukeSilo/doodads_on5.png"
							"../NukeSilo/doodads_on6.png"
							"../NukeSilo/doodads_on7.png"
							"../NukeSilo/doodads_on8.png"
						]
						Size = [3, 1]
						AnimationInterval = 0.12
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				Offset = [0, 2]
				DamageLevels
				[
					{
						File = "../NukeSilo/doodads_off.png"
						Size = [3, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof1.png"
						NormalsFile = "roof_n1.png"
						Size = [3, 5]
					}
					{
						File = "roof2.png"
						NormalsFile = "roof_n2.png"
						Size = [3, 5]
					}
					{
						File = "roof2.png"
						NormalsFile = "roof_n2.png"
						Size = [3, 5]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				Offset = [0, 1.5]
				DamageLevels
				[
					{
						File = "../NukeSilo/lights.png"
						Size = [3, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [0, 1.5]
				DamageLevels
				[
					{
						File = "../NukeSilo/walls.png"
						Size = [3, 2]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, 1]
				DamageLevels
				[
					{
						File = "../NukeSilo/roofglow.png"
						Size = [3, 1]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [-25/64, 0.5 + 74/64]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [3.5, 3.5]
						Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*1.25, 0, 0]
					}
				]
			}
		}
		
		GraphicsExternalWalls
		{
			Type = Graphics
			Location = [1.5, 2.5]
			OperationalToggle = IsOperational
			Walls
			{
				Layer = "external_walls"
				Offset = [0, -1]
				DamageLevels
				[
					{
						File = "extwalls.png"
						NormalsFile = "extwalls_n.png"
						Size = [3, 4]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [25/64, 0.5 + 74/64]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [3.5, 3.5]
						Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*1.25, 0, 0]
					}
				]
			}
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1.5, 2.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		/*Blueprintslaser
		{
			Type = BlueprintSprite
			File = "blueprints_laser.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 0
			}
		}
		
		Blueprintscannon
		{
			Type = BlueprintSprite
			File = "blueprints_cannon.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 1
			}
		}
		
		Blueprintsbeam
		{
			Type = BlueprintSprite
			File = "blueprints_beam.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 2
			}
		}
		
		Blueprintsrail
		{
			Type = BlueprintSprite
			File = "blueprints_railgun.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 3
			}
		}
		
		Blueprintsmissile
		{
			Type = BlueprintSprite
			File = "blueprints_missile.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 4
			}
		}
		
		BlueprintsBFG
		{
			Type = BlueprintSprite
			File = "blueprints_bfg.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 5
			}
		}	

		BlueprintsFireball
		{
			Type = BlueprintSprite
			File = "blueprints_fireball.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 6
			}
		}	
		
		BlueprintsCombatMK3
		{
			Type = BlueprintSprite
			File = "blueprints_combat3.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 7
			}
		}	
		
		BlueprintsShield
		{
			Type = BlueprintSprite
			File = "blueprints_shield.png"
			Size = [3, 5]

			ShowOnlyInToggleMode
			{
				ToggleID = dronetype
				Mode = 8
			}
		}*/
		
		BlueprintsTest
		{
			Type = BlueprintSprite
			File = "iconbase.png"
			Size = [3, 5]

			//ShowOnlyInToggleMode
			//{
			//	ToggleID = dronetype
			//	Mode = 8
			//}
		}
		
		/*GraphicsAuto
		{
			Type = Graphics
			Location = [1.5, 4.5]
			OperationalToggle = WeaponControllerBuffToggle
			OperationalDoodad
			{
				Layer = "turrets"
				DamageLevels
				[
					{
						File = "auto.png"
						Size = [2, 1]
					}
				]
			}
		}*/
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew

		RecCrew = (&CrewRequired) * 4
	}
	
	StatsNotesKey = "Stats/MissileLauncherNotes"
}
