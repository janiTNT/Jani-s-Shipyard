Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/NukeSilo"
	IconNameKey = "Parts/NukeSiloIcon"
	ID = janiTNT.nuke_missile_silo
	EditorGroup = "WeaponsProjectile"
	DescriptionKey = "Parts/NukeSiloDesc"
	Resources
	[
		[steel, 100]
		[coil2, 25]
		[processor, 2]
	]//15000
	Size = [3, 4]
	SelectionPriority = 1
	SelectionTypeByRotation = false
	MaxHealth = 12000
	TypeCategories = [weapon, uses_nukes, uses_launcher_parts, is_crewed]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	AllowedDoorLocations
	[
		[-1, 2]
		[3, 2]
	]
	ForceManhattanPathInPart = true
	BlockedTravelCellDirections
	[
		{
			Key = [0, 3]
			Value = [Right]
		}
		{
			Key = [3, 3]
			Value = [Left]
		}
	]
	EditorIcon
	{
		Texture
		{
			File = "nukesilo.png"
			SampleMode = Linear
		}
		Size = [49, 69]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 8
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		
		LauncherGraphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "silo_floor.png"
						Size = [3, 3]
					}
				]
			}
		}

		SiloDoor
		{
			Type = Sprite
			Location = [1.5, 1]
			Layer = "roofs"
			ResetAnimationTrigger = Weapon
			AtlasSprite
			{
				AnimationFiles
				[
					//"door1.png"
					"door2.png"
					"door3.png"
					"door4.png"
					"door5.png"
					"door6.png"
					"door7.png"
					"door7.png"
					"door7.png"
					"door6.png"
					"door5.png"
					"door4.png"
					"door3.png"
					"door2.png"
					"door1.png"
				]
				NormalsAnimationFiles
				[
					//"door_normals1.png"
					"door_normal2.png"
					"door_normal3.png"
					"door_normal4.png"
					"door_normal5.png"
					"door_normal6.png"
					"door_normal7.png"
					"door_normal7.png"
					"door_normal7.png"
					"door_normal6.png"
					"door_normal5.png"
					"door_normal4.png"
					"door_normal3.png"
					"door_normal2.png"
					"door_normal1.png"
				]
				Size = [2, 2]
				AnimationInterval = 0.166
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}
		
		TrueNUKEMissileStorage
		{
			Type = MultiResourceStorage
			ResourceType = missile_part_nuke
			ResourceStorages = [MissileStorage]
			AddMode = PrioritizeLeastEmptyCapacity
			RemoveMode = PrioritizeMostEmptyCapacity
		}
		
		MissileStorage
		{
			Type = ResourceStorage
			ResourceType = missile_part_nuke
			MaxResources = 12
			ToggleOnResources = 12
			ToggleOffResources = 11
			DelayBeforeReadyToUse = .5
			UITileRect = [1 + 7/64, 1.5 + 7/64, 1 - 14/64, 1 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/MissileLoad
			DropResourcesWhenDestroyed = true
			DropResourcesWhenRemoved = true
		}
		Consumer
		{
			Type = ResourceConsumer
			ResourceType = missile_part_nuke
			Storage = MissileStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			OperationalToggle = PowerToggle
			ConsumptionToggleButtonOffset = [0, -.4]
		}

		MissilesPrereq
		{
			Type = MultiToggle
			Toggles = [MissileStorage]
			Mode = Any
		}

		Weapon
		{
			Type = TurretWeapon
			Location = [1.5, 1]
			Rotation = -90d
			Emitter = Emitter
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 0 // Uses common reload timer.
			FiringArc = 360d
			TargetingArc = 360d
			ValidArc = 360d
			FireThresholdAngle = (&TargetingArc) / 2
			RotateSpeed = 360d
			//AllowFireWithBlockedLOS = true
			AIFirepowerRating = 4800
			FirePermissionToggle = FirePermissionToggle
			IgnoreSourceShipLowLOSChecks = true

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
					EnableInDirectControlMode = true
				}
			]

			/*BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64*/

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}
		FirePermissionToggle
		{
			Type = MultiToggle
			Toggles = [CommonReloadTimerLong, FireModeToggle]
			Mode = All
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = CommonReloadTimerLong
			Invert = true
		}

		CommonReloadResetTrigger
		{
			Type = MultiTrigger
			Triggers = [Weapon]
		}

		Emitter
		{
			Type = BulletEmitter
			ChainedTo = Weapon
			OperationalToggle = IsOperational
			FireTrigger = Weapon
			GetTargetFrom = Weapon
			ResourceStorage = MissileStorage
			ResourcesUsed = 12
			Bullet = &<nuke_stage1.rules>
			TargetLeadPrediction = false
			Recoil = 0
			FireDelay = 1
		}

		LaunchEffect
		{
			Type = TriggeredEffects
			ChainedTo = Weapon
			Trigger = Emitter

			MediaEffects
			[
				:<./Data/ships/terran/missile_launcher/particles/missile_launcher_shoot_flash.rules>
				{
					Bucket = Upper2
				}

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/missile_launcher/shoot.wav"
					Speed = 0.25
					SpeedVariation = .1
				}
			]
		}

		MissileSprites
		{
			Type = ResourceSprites
			Location = [1.5, 1]
			ResourceStorage = MissileStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = true
			ResourceLevels
			[
				{
					File = "nuke0.png"
					Size = [2, 2]
				}
				{
					File = "nuke1.png"
					Size = [2, 2]
				}
				{
					File = "nuke2.png"
					Size = [2, 2]
				}
				{
					File = "nuke3.png"
					Size = [2, 2]
				}
				{
					File = "nuke4.png"
					Size = [2, 2]
				}
				{
					File = "nuke5.png"
					Size = [2, 2]
				}
				{
					File = "nuke6.png"
					Size = [2, 2]
				}
				{
					File = "nuke7.png"
					Size = [2, 2]
				}
				{
					File = "nuke8.png"
					Size = [2, 2]
				}
				{
					File = "nuke9.png"
					Size = [2, 2]
				}
				{
					File = "nuke10.png"
					Size = [2, 2]
				}
				{
					File = "nuke11.png"
					Size = [2, 2]
				}
				{
					File = "nuke12.png"
					Size = [2, 2]
				}
			]
		}
		
		HatchSprites
		{
			Type = ResourceSprites
			Location = [1.5, 2.5]
			ResourceStorage = MissileStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = true
			//Round = Up
			ResourceLevels
			[
				{
					File = "hatch1.png"
					Size = [2, 1]
				}
				{
					File = "hatch2.png"
					Size = [2, 1]
				}
				&1
				&1
				&1
				&1
				&1
				&1
				&1
				&1
				&1
				&1
				{
					File = "hatch3.png"
					Size = [2, 1]
				}
			]
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [1.5, 3]
			IncludeWhenUnderConstruction = false

			FactorHitEffectsWith = MissileStorage
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 60000
					Radius = 7
					Delay = .3
					FireChancePerNDamage = 50%
					NDamage = 1000
					CrewKillChance = 50%
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 40000
					Radius = 4
					Delay = .4
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
						Crew = false
					}
				}
			]
		}
		
		DestroyedEffectsUnderConstruction : DestroyedEffects
		{
			OperationalToggle // Null or else we'll crash when building.
			FactorHitEffectsWith // Null or else we'll also crash when building.
			HitEffects // Null or else we'll also crash when building.
			IncludeWhenUnderConstruction = true
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 3]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of missiles.
				{
					Toggle = MissileStorage
					Delay = 10
					AtlasSprite
					{
						File = &/INDICATORS/NoNuke
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		CommonReloadTimerLong
		{
			Type = Timer
			Duration = 20
			AutoStart = true
			StartTrigger = CommonReloadResetTrigger
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [.6, 3.44]
			Rotation = -165d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2.4, 3.44]
			Rotation = 165d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [MissilesPrereq]
			CrewDestinations
			[
				[.5, 3.44]
				[2.5, 3.44]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		Graphics
		{
			Type = Graphics
			Location = [1.5, 2]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				Offset = [0, 1]
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				Offset = [0, 1.5]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [3, 1]
						AnimationInterval = 0.12
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				Offset = [0, 1.5]
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [3, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				Offset = [0, 1]
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [3, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [0, 1]
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [3, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "nukesiloroof1.png"
						NormalsFile = "nukesiloroof_n1.png"
						Size = [3, 4]
					}
					{
						File = "nukesiloroof2.png"
						NormalsFile = "nukesiloroof_n2.png"
						Size = [3, 4]
					}
					{
						File = "nukesiloroof3.png"
						NormalsFile = "nukesiloroof_n3.png"
						Size = [3, 4]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "roofglow.png"
						Size = [3, 1]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [-25/64, 74/64]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [3.5, 3.5]
						Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*1.25, 0, 0]
					}
				]
			}
		}
		
		Graphics2
		{
			Type = Graphics
			Location = [1.5, 2]
			OperationalToggle = IsOperational
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [25/64, 74/64]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [3.5, 3.5]
						Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*1.25, 0, 0]
					}
				]
			}
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1.5, 2]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 4]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		NukeMissileCapacity = 1

		RecCrew = (&CrewRequired) + (&~/MissileStats/Stats/ROF) * (&~/MissileStats/Stats/MissileParts) * 4
		
		CrewStunDuration = [0, &~/Part/Components/Emitter/Bullet/Components/DeployDeath/OnDeath/HitEffects/1/Duration]
		CrewStunRadius = &~/Part/Components/Emitter/Bullet/Components/DeployDeath/OnDeath/HitEffects/1/Radius
	}

	StatsNotesKey = "Stats/MissileLauncherNotes"
}

MissileStats = &<./Data/ships/terran/missile_launcher/nuke/missile_launcher_nuke.rules>/MissileStats