Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/Cram_Loader3x"
	IconNameKey = "Parts/Cram_Loader3xIcon"
	ID = janiTNT.CRAM_loader_3x
	EditorGroup = "WeaponsProjectile"
	DescriptionKey = "Parts/Cram_Loader3xDesc"
	Resources
	[
		[steel, 12]
	]
	AIValueFactor = 0
	Size = [1, 3]
	MaxHealth = 3000
	ReceivableBuffs : ^/0/ReceivableBuffs [JaniCRAM_IntakeConnection]
	TypeCategories = [CRAM, uses_ammo]
	IsFlippable = true
	AllowedDoorLocations
	[
		[-1, 2]
		[0, 3]
		[1, 2]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64/3, 64]
	}

	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, CommandToggle]
			Mode = All
		}
		CommandToggle
		{
			Type = CommandToggle
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		Graphics
		{
			Type = Graphics
			Location = [.5, 1.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "floor1.png"
						Size = [1, 3]
						UVRotation = 0
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 3]
					}
				]
			}
		}
		RoofCoverGrid
		{
			Type = SpriteGrid
			RandomDamageLevels
			[
				[
					{
						File = "./Data/ships/terran/corridor/roof.png"
						NormalsFile = "./Data/ships/terran/corridor/roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/corridor/roof_33.png"
						NormalsFile = "./Data/ships/terran/corridor/roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/corridor/roof_66.png"
						NormalsFile = "./Data/ships/terran/corridor/roof_normals_66.png"
						Size = [1, 1]
					}
				]
			]
			RandomUVRotation = true
			Layer = "roofs"
		}
		AmmoSlider
		{
			Type = TransformLerp
			ValueFrom = AmmoStorage
			StartLocation = [0.5, 0.785]
			EndLocation = [0.5, 1.4]
		}
		/*AmmoSlider
		{
			Type = TransformMatch
			Location = [0.5, 0.785]
			//OperationalToggle = IsOperational
			//ChainedTo = TurretSlider
			//Rotation = -90d // Relative to unrotated part.
			MatchTransformOf = AmmoLerpSlider
			MatchLocationSpeed = 1
			//ResetTransformWhen = IsShellNotFullyOpen
			//ResetRotationSpeed = 120d
			//ClampRotationToArc = [-(&../../Turret/FiringArc)/2 - 90d, (&../../Turret/FiringArc)]
			//ToggleOnRotationThreshold = 2d
		}*/
		AmmoSprites
		{
			Type = ResourceSprites
			Location = [0, 0]
			ChainedTo = AmmoSlider
			ResourceStorage = AmmoStorage
			Layer = "doodads_low"
			HasZeroResourceSprite = true
			ResourceLevels
			[
				{
					File = "ammo1.png"
					Size = [1, 1]
					Offset = [0, 0.25]
				}
				{
					File = "ammo2.png"
					Size = [1, 1]
					Offset = [0, 0.25]
				}
				{
					File = "ammo3.png"
					Size = [1, 2]
					Offset = [0, 0]
				}
			]
		}
		LoadingGraphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			ResetAnimationTrigger = LoadingConverter
			OperationalToggle = AmmoStorage
			//AnimationSpeedFactor = RateOfFireTween

			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"arm_on1.png"
							"arm_on2.png"
							"arm_on3.png"
							"arm_on4.png"
							"arm_on5.png"
							"arm_off.png"// Off
						]
						Size = [1, 1]
						AnimationInterval = (0.5) / 5//Minus Last
						AnimationStartTime = MinValue
						ClampAnimation = true
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "arm_empty.png"
						Size = [1, 1]
					}
				]
			}
		}
		VisualCoolerBuff
		{
			Type = AreaBuffProvider
			BuffType = JaniCRAM_CoolingSpeedBuff
			BlueprintsOnly = true // Only for display purposes.
			//OperationalToggle = BatteryStorage
			BuffArea = [1, 0, 1, 1]
			BuffAmount = 0
			ShowBuffRange = true
		}
		AmmoStorage
		{
			Type = ResourceStorage
			ResourceType = bullet
			MaxResources = 2 * (&<./data/resources/bullet/bullet.rules>/MaxStackSize)
			//DelayBeforeReadyToUse = 1
			//AnticipateMoreResourcesFrom = ["AmmoStorage"]
			ToggleOnResources = 1
			ToggleOffResources = 0
			UITileRect = [1 + 7/64, .4 + 7/64, 1 - 14/64, 1 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/AmmoLoad
			DropResourcesWhenDestroyed = true
		}
		IntakeBuffToggle
		{
			Type = BuffToggle
			BuffType = JaniCRAM_IntakeConnection
		}
		ToggledBatteryConsumer
		{
			Type = ToggledComponents
			Toggle = IntakeBuffToggle
			Invert = true
			Components
			{
				AmmoConsumer
				{
					Type = ResourceConsumer
					ResourceType = bullet
					Storage = AmmoStorage
					DefaultPriority = &/PRIORITIES/Weapon_Supply
					OperationalToggle = PowerToggle
					ConsumptionToggleButtonOffset = [0, -.4]
				}
			}
		}
		CRAM_LOADER_AmmoStorage
		{
			Type = ResourceStorageProxy
			ResourceType = bullet
			PartLocation = [1, 0]
			PartCriteria
			ComponentID = CombinedCRAMAmmoStorage
		}
		LoadingConverter
		{
			Type = ResourceConverter
			OperationalToggle = IsOperationalConverter
			FromStorage = AmmoStorage
			ToStorage = CRAM_LOADER_AmmoStorage
			FromQuantity = 1
			ToQuantity = 1
			MinFromQuantityForConversion = 1
			//Interval = 0.5
			Interval = 1 / ((&/Simulation/PhysicsUpdatesPerSecond))
		}
		IsOperationalConverter
		{
			Type = MultiToggle
			Toggles = [IsOperational, CooledDownToggle, HaltConverter]
			Mode = All
		}
		CooledDownToggle
		{
			Type = TriggeredToggle
			OnTrigger = CooldownDelay
			OffTrigger = LoadingConverter
			StartsOn = true
		}
		CooldownDelay
		{
			Type = DelayTrigger
			Trigger = LoadingConverter
			Delay = .5
		}
		HaltConverter
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = CRAM_LOADER_AmmoStorageToggle, invert = true}//if ammo storage is not full.
			]
			Mode = All
		}
		CRAM_LOADER_AmmoStorageToggle
		{
			Type = ToggleProxy
			IsOnWhenNotConnected = true
			PartLocation = [1, 0]
			ComponentID = CombinedCRAMAmmoStorageToggle
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 3]
			UVRotation = 0
			//Offset = [0, -0.5]
		}
	}
}
