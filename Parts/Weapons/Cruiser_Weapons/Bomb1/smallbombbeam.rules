Range = 190
IdealRange = 150
Width = .1 //  slim
//HitInterval = 1//once
//HitEffectsScaleOverRange = [1, 1]
//MediaEffectsScaleOverRange = [1, 1]
ClipRangeToTarget = true // Teleports to range
//RandomOffsetRadius = [1.5, 1.5] // Increases as range increases, Slightly innacurate
KeepLengthWhenHitNothing = true

//PenetratesStructure = false //prevents double bombs

//CrewCollisions = {Enemies=true; Junk=true}
HitCrew = &HitOperational

BeamMediaEffects
[
	// The beam itself.
	/*{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = ./data/common_effects/particles/noise_gradient.png
				SampleMode = Linear
				MipLevels = max
				UVMode = Wrap
			}
			_noiseTexture
			{
				File = ./data/common_effects/particles/noise_voronoi.png
				MipLevels = max
				SampleMode = Linear
				UVMode = Wrap
			}
			Shader = "./data/shots/ion_beam/ion_beam.shader"
			_extraBeginLength = 0
			_extraEndLength = 0.25
			_sizePulseFactor = 1.2
			_sizePulseInterval = .1
			_sizePulseUOffsetFactor = -.03
			_endCapSize = 4
			Size = [100%, 3.5]
			VertexColor = [255, 255, 255, 217]
			TargetBlendMode
			{
				SourceRgbFactor = InverseDestColor
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = One
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		FadeInTime = .1
		FadeOutTime = .1
		RandomTimeOffset = [0, 1]
		Bucket = IonBeam
	}*/

	// Beam lighting.
	/*{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = "./Data/common_effects/particles/blob.png"
				MipLevels = max
				SampleMode = Linear
			}
			Shader = "./Data/common_effects/fancy_beam_light.shader"
			Size = [100%, 1.25]
			_extraBeginLength = (&Size/1) / 4
			_extraEndLength = (&Size/1) / 2
			VertexColor = [0, 255, 255, 128]
			_z = 0.2
			_litReflectiveStrength = 1
			_litAdditiveStrength = 0.15
			_unlitAdditiveStrength = 0.25
			_nrmlStrengthLimit = 1.0
			TargetBlendMode
			{
				SourceRgbFactor = InverseDestColor
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = Zero
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		Bucket = Upper4
		IsLight = true
		FadeInTime = .05
		FadeOutTime = .35
	}*/
	
	//Experimental Chaingun Effect
	// The bullet beam effect.
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = ./data/shots/chaingun_shot/chaingun_trail.png
				SampleMode = Linear
				MipLevels = max
				UVMode = Wrap
			}
			_noiseTex
			{
				File = ./data/common_effects/particles/noise_gradient.png
				MipLevels = max
				SampleMode = Linear
				UVMode = Wrap
			}
			Shader = "bomb_beam_warp.shader"
			_extraBeginLength = 0.25
			_extraEndLength = 0.25
			_color1 = [10, 20, 30, 255]
			_color2 = [100, 185, 255, 255]
			_endFadeLength = 2;
			Size = [100%, 16]
			VertexColor = [255, 255, 255, 255]
			TargetBlendMode = Add
		}
		FadeInTime = 0
		FadeOutTime = 0.1
		RandomTimeOffset = [0, 1]
		Bucket = ChaingunBullet
	}
	
	// Distort
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = ./data/shots/chaingun_shot/chaingun_trail.png
				SampleMode = Linear
				MipLevels = max
				UVMode = Wrap
			}
			_noiseTex
			{
				File = ./data/common_effects/particles/noise_gradient.png
				MipLevels = max
				SampleMode = Linear
				UVMode = Wrap
			}
			Shader = "./data/shots/chaingun_shot/chaingun_distortion.shader"
			_extraBeginLength = 0
			_extraEndLength = -2
			_color1 = [10, 20, 30, 255]
			_color2 = [100, 185, 255, 255]
			_endFadeLength = 4;
			Size = [100%, 16]
			VertexColor = [255, 255, 255, 255]
			TargetBlendMode = AlphaBlend
		}
		FadeInTime = 0
		FadeOutTime = 0.12
		RandomTimeOffset = [0, 1]
		CaptureBackBuffer = True
		Bucket = ChaingunDistortion
		IsFancy = True
	}

	// Beam lighting.
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = "./Data/common_effects/particles/blob.png"
				MipLevels = max
				SampleMode = Linear
			}
			Shader = "./Data/common_effects/fancy_beam_light.shader"
			Size = [100%, 10]
			_extraBeginLength = (&Size/1) / 2
			_extraEndLength = (&Size/1) / 2
			VertexColor = [0, 255, 255, 255]
			_z = 0.4
			_litReflectiveStrength = 12
			_litAdditiveStrength = 0
			_unlitAdditiveStrength = 0
			_nrmlStrengthLimit = 1.0
			TargetBlendMode
			{
				SourceRgbFactor = InverseDestColor
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = Zero
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		Bucket = Upper4
		IsLight = true
		FadeInTime = 0
		FadeOutTime = .06
	}
]

HitNothing
{
	Offset = [-0.25, 0]
	
	HitEffects
	[
		{
			Type = SpawnBullets
			Bullet = &<bomb_small.rules>
			Count = 1
			Distance = 0
			InheritVelocity = true
		}
	]
	
	MediaEffects
	[
		&<../ion1/particles/ion_hit_orb.rules>

		: /BASE_SOUNDS/AudioExterior
		{
			Sound = "./data/shots/mine/alarm.wav"
			Volume = 0.3
			SpeedVariation = 0
		}
		
		: /BASE_SOUNDS/AudioExterior
		{
			Sound = "./Data/ships/common/ftl_jump_in.wav"
			Volume = 0.6
			Speed = 1
			/*MaxConcurrent = 1
			MaxConcurrentVolume = 1
			RampUpTime = .25
			RampDownTime = .25*/
		}
	]
}

HitShield = &HitNothing
HitOperational = &HitNothing
HitStructural
{
	Offset = [-0.25, 0]
	
	HitEffects
	[
		{
			Type = ExplosiveDamage
			TotalDamage = 8000
			Radius = 4
			ImpulsePerNDamage = 1
			NDamage = 500
			Filter
			{
				OperationalHealth = false
				StructuralHealth = true
			}
		}
	]
	
	MediaEffects
	[
		&<../ion1/particles/ion_hit_orb.rules>
	]
}