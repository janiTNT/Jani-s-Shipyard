Components
{
	Mk1Storage
	{
		Type = ResourceStorage
		OperationalToggle = IsOperational
		ResourceType = fake
		MaxResources = 2
		DelayBeforeReadyToUse = 0.5
		//DropResourcesWhenDestroyed = true
		//DropResourcesWhenRemoved = true
		InitToMaxResources = 0
	}
	
	CanBuild
	{
		Type = MultiToggle
		Toggles
		[
			{Toggle = IsOperational}
			{Toggle = SteelReq}
			{Toggle = Mk1Storage, invert = true}
		]
		Mode = All
	}
	SteelReq
	{
		Type = MultiResourceStorage
		ResourceType = steel
		ResourceStorages = [SteelStorage]
		ToggleOnResources = 2
		ToggleOffResources = 1
	}

	BuildConverter
	{
		Type = ResourceConverter
		From
		[
			{
				Storage = BatteryStorage
				Quantity = 100
				MinQuantityForConversion = 1
			}
		]
		OperationalToggle = CanBuild
		ToStorage = BuildStorage
		ToQuantity = 1
		Interval = 6 / 8
	}
	
	BuildStorage
	{
		Type = ResourceStorage
		ResourceType = fake
		MaxResources = 8
		DelayBeforeReadyToUse = 0
		StartingResources = 0
		InitToMaxResources = 0
		InitToMaxResourcesPVP = 0
	}
	
	BuiltConverter
	{
		Type = ResourceConverter
		OperationalToggle = CanBuild
		From
		[
			{
				Storage = BuildStorage
				Quantity = 8
			}
			{
				Storage = SteelStorage
				Quantity = 2
			}
		]
		ToStorage = Mk1Storage
		ToQuantity = 2
		Interval = .15
	}
	ConvertEffects
	{
		Type = TriggeredEffects
		Trigger = BuiltConverter
		Location = [0.5, 0.5]
		MediaEffects = &/COMMON_EFFECTS/MissileLoad
	}
	
	Weapon
	{
		Type = TurretWeapon
		Location = [.5, .5]
		Rotation = -90d
		Emitter = Emitter
		OperationalToggle = IsOperational
		AutoFireToggle = AutoFireToggle
		FireInterval = 0
		FiringArc = 0d
		TargetingArc = 360d
		ValidArc = 360d
		FireThresholdAngle = (&TargetingArc) / 2
		RotateSpeed = 0d
		AllowFireWithBlockedLOS = true
		AIFirepowerRating = 1000
		FirePermissionToggle = FireModeToggle

		AutoTargets
		[
			{
				TargetType = ShipParts
				Toggle = AutoTargetToggle
				EnableInDirectControlMode = true
			}
		]

		CoverageSectorArc
		{
			Texture = &/INDICATORS/VerticalGradient
			VertexColor = [255, 255, 255, 51]
			QuadCount = 64
		}
	}

	ReloadProgressBar
	{
		Type = ProgressBar
		OperationalToggle = IsOperational
		ShowProgressFor = Weapon
	}

	Emitter
	{
		Type = BulletEmitter
		ChainedTo = Weapon
		OperationalToggle = IsOperational
		FireTrigger = Weapon
		GetTargetFrom = Weapon
		ResourceStorage = Mk1Storage
		ResourcesUsed = 2
		Bullet = &<projectiles/combat1/combat1.txt>
		TargetLeadPrediction = false
		Recoil = 15
	}

	LaunchEffect
	{
		Type = TriggeredEffects
		ChainedTo = Weapon
		Trigger = Weapon

		MediaEffects
		[
			: /BASE_SOUNDS/AudioExterior
			{
				Sound = "./Data/ships/terran/missile_launcher/shoot.wav"
				Speed = 1.0
				SpeedVariation = .1
			}
		]
	}
	
	DroneSprite
	{
		Type = ResourceSprites
		Location = [.5, .5]
		Rotation = -90d
		ResourceStorage = Mk1Storage
		Layer = "weapons"
		ResourceLevels
		[
			{
				File = "One1.png"
				NormalsFile = "One_n1.png"
				Size = [1, 1]
			}
		]
	}
	DroneBuildSprite
	{
		Type = ResourceSprites
		Location = [.5, .5]
		Rotation = -90d
		ResourceStorage = BuildStorage
		Layer = "weapons"
		ResourceLevels
		[
			{
				File = "One0.png"
				NormalsFile = "One_n0.png"
				Size = [1, 1]
			}
		]
	}
	HatchSprites
	{
		Type = ResourceSprites
		Location = [.5, 1.5]
		ResourceStorage = Mk1Storage
		Layer = "doodads_high"
		HasZeroResourceSprite = true
		ResourceLevels
		[
			{
				File = "hatch1.png"
				Size = [1, 1]
			}
			{
				File = "hatch3.png"
				Size = [1, 1]
			}
		]
	}
	
	Indicators
	{
		Type = IndicatorSprites
		Location = [.5, 1.25]
		Layer = "indicators"
		Indicators
		[
			// Turned off.
			{
				Toggle = PowerToggle
				AtlasSprite
				{
					File = &/INDICATORS/PowerOff
					Size = [1, 1]
				}
			}

			// Out of steel.
			{
				Toggle = SteelReq
				Delay = 6
				AtlasSprite
				{
					File = &/INDICATORS/NoResource
					Size = [1, 1]
				}
			}

			// No crew.
			{
				Toggle = PartCrew
				AtlasSprite
				{
					File = &/INDICATORS/NoCrew
					Size = [1, 1]
				}
			}
		]
	}
}