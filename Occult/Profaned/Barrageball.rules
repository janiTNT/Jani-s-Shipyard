Part : <../base_part_occult.rules>/Part
{
	NameKey = "Parts/MegaroidBallWeaponBarrage"
	DescriptionKey = "Parts/MegaroidBallWeaponBarrageDesc"
	ID = janiTNT.lightball_4x4_barrage // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "BossParts"
	Resources
	[
		[hyperium, 128]
	]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	Density = 3
	MaxHealth = 32000 * 8
	EditorReplacementPartID = ""
	Size = [2, 4]
	SelectionPriority = 1
	SelectionTypeID = "weapons"
	IsRotateable = true
	TypeCategories = [armor, weapon, boss_resistant]
	InitialPenetrationResistance = 1
	ContinuingPenetrationResistance = 1
	ExplosiveDamageAbsorption = 100%
	DamageResistances = {explosive = 25%}
	GenerateRectCollider = false
	IsExternal = true
	ExternalWalls = [None]
	InternalWalls = [All]
	IsWalled = false
	EditorIcon
	{
		Texture = "../light_icon.png"
		Size = [85, 85]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		
		FunctionEnabled
		{
			Type = MultiToggle
			Toggles = [BigAttackMode]
			Mode = All
			Invert = true
		}
		BigAttackMode
		{
			Type = BuffToggle
			BuffType = JaniWeaponsDisabledBoss
			MinBuffValue = 1
			MaxBuffValue = 999999999
		}
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, CommandToggle, FunctionEnabled]
			Mode = All
		}
		
		IsNotOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational]
			Invert = true
			Mode = All
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 8
		}
		
		Collider
		{
			Type = CircleCollider
			Location = [1, 2]
			Radius = 1.5
			Density = 5
		}
		
		CommandToggle
		{
			Type = CommandToggle
		}
		
		ClearPermission
		{
			Type = MultiToggle
			Toggles = [CommandToggle]
			Mode = All
			Invert = true
		}
		ClearTrigger // deletes part if no sigil found
		{
			Type = Timer
			OperationalToggle = ClearPermission
			Duration = 10
			AutoStart = true
			Repeats = true
		}
		ClearEffects
		{
			// This just destroys the part, which in turn will trigger the DeathEffects, causing the actual collateral damage.

			Type = TriggeredEffects
			Trigger = ClearTrigger
			HitEffects
			[
				{
					Type = Damage
					Damage = 999999
					Filter
					{
						Friendlies = true
						IgnoreInvulnerability = false
					}
				}
			]
		}
		
		OperationalComponents
		{
			Type = ToggledComponents
			Toggle = IsOperational
			IncludeInBlueprints = false
			Components
			{
				Graphics
				{
					Type = Graphics
					Location = [1, 2]
					Floor
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightball.png"
								Size = [3.5, 3.5]
								VertexColor = [255*1.5, 205*1.5, 128*1.5]
								RotSpeed = 180d
								SampleMode = Linear
							}
						]
					}
					Walls
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightball.png"
								Size = [3.5, 3.5]
								VertexColor = [255*1.5, 205*1.5, 128*1.5]
								RotSpeed = -100d
								SampleMode = Linear
							}
						]
					}
					OperationalDoodad
					{
						Layer = "asteroid_lights_add"
						//RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightballs.png"
								Size = [4, 4]
								RotSpeed = 60d
								SampleMode = Linear
								VertexColor = [255*1.5, 205*1.5, 128*1.5]
							}
						]
					}
					OperationalLighting
					{
						Layer = "asteroid_lights_add"
						//RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightballs.png"
								Size = [4, 4]
								RotSpeed = 60d
								SampleMode = Linear
								VertexColor = [255*1.5, 205*1.5, 128*1.5]
								UVRotation = 1
							}
						]
					}
					OperationalRoofDoodad
					{
						Layer = "asteroid_lights_add"
						//RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightballs.png"
								Size = [4, 4]
								RotSpeed = 60d
								SampleMode = Linear
								VertexColor = [255*1.5, 205*1.5, 128*1.5]
								UVRotation = 2
							}
						]
					}
					Roof
					{
						Layer = "asteroid_roof_lights_fancy"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [12, 12]
								Z = 1.0 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*2.25, 205*2.25, 128*2.25]
							}
						]
					}
				}
			}
		}
		
		UnOperationalComponents
		{
			Type = ToggledComponents
			Toggle = IsNotOperational
			//InvertOperationalToggle = false
			IncludeInBlueprints = false
			Components
			{
				Graphics2
				{
					Type = Graphics
					Location = [1, 2]
					Floor
					{
						Layer = "asteroid"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../deadball.png"
								NormalsFile = "../deadball_n.png"
								Size = [3.2, 3.2]
								RotSpeed = 0d
							}
						]
					}
				}
			}
		}
		
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		
		Turret
		{
			Type = TurretWeapon
			Location = [1, 2]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 8
			FiringArc = 360d
			RotateSpeed = 60d
			FireThresholdAngle = 1d
			AIFirepowerRating = 4800 *4
			Emitter = BulletEmitter
			FirePermissionToggle = FireModeToggle
			HoldTargetAfterCancel = 4 //&../BulletEmitter/FireInterval
			AutoTargetCrewSafetyDist = 8

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 64, 64, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		Oscillator
		{
			Type = Oscillator
			ChainedTo = Turret
			OperationalToggle = IsOperational
			Location = [0, 0]
			Angle = -25d
			Interval = 4.7
			ResetWhenOperational = false
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Turret
		}

		BulletEmitter
		{
			Type = BulletEmitter
			ChainedTo = Oscillator
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [2.6, 0]
			OperationalToggle = IsOperational
			//FireDelay = 6
			Burst = 7
			BurstDelay = 0.5
			Bullet = &<bigbarrageshotbolt.rules>
			Spread = [-0.1d, 0.1d]
			//ResourceStorage = BatteryStorage
			//ResourcesUsed = 200
			//MinResourcesUsed = 1
		}

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = Oscillator
			Trigger = BulletEmitter
			Location = [0, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&<../particles/bigflashfourth.rules>
				//&<particles/laser_blaster_small_shoot_flash.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/railgun_loader/shoot.wav"
					Volume = .8
					SpeedVariation = .25
				}
			]
		}
		
		DestroyedEffects : &<../base_part_occult.rules>/Part/Components/DestroyedEffects
		{
			Location = [.5, 1.5]
		}
		
		DestroyedEffectsDeathBySigil : &<../base_part_occult.rules>/Part/Components/DestroyedEffectsDeathBySigil
		{
			Location = [.5, 1.5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "./data/ships/asteroid/rock/rock_1x1_blueprints.png"
			Size = [2, 4]
		}
	}
}