Part : <../base_part_occult.rules>/Part
{
	NameKey = "Parts/BrimstoneBossBallLarge"
	DescriptionKey = "Parts/BrimstoneBossBallLargeDesc"
	ID = janiTNT.brimstone_lightball // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "BossParts"
	Resources
	[
		[hyperium, 256]
	]
	ReceivableBuffs : ^/0/ReceivableBuffs [JaniWeaponsDisabledBossSecondary]
	Density = 3
	MaxHealth = 320000 * 4
	EditorReplacementPartID = ""
	Size = [3, 3]
	SelectionPriority = 1
	SelectionTypeID = "weapons"
	IsRotateable = true
	TypeCategories = [armor, weapon]
	InitialPenetrationResistance = 1
	ContinuingPenetrationResistance = 1
	ExplosiveDamageAbsorption = 100%
	DamageResistances = {explosive = 25%}
	GenerateRectCollider = false
	IsExternal = true
	ExternalWalls = [None]
	InternalWalls = [All]
	IsWalled = false
	EditorIcon
	{
		Texture = "../light_icon.png"
		Size = [80, 80]
	}
	Components : ^/0/Components
	{
		FunctionEnabled
		{
			Type = MultiToggle
			Toggles = [BigAttackMode]
			Mode = All
			Invert = true
		}
		BigAttackMode
		{
			Type = BuffToggle
			BuffType = JaniWeaponsDisabledBossSecondary
			MinBuffValue = 1
			MaxBuffValue = 999999999
		}
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, CommandToggle, FunctionEnabled]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		
		IsNotOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational]
			Invert = true
			Mode = All
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 12
		}
		
		Collider
		{
			Type = CircleCollider
			Location = [1.5, 1.5]
			Radius = 1.5
			Density = 5
		}
		
		CommandToggle
		{
			Type = CommandToggle
		}
		
		DetectorBuffProvider
		{
			Type = GridBuffProvider
			BuffType = JaniOrbDetectionBrimstoneBoss
			GridDistance = 80
			AllowDiagonals = true
			BuffAmount = 1
		}
		
		Phase1Toggle
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = IsOperational}
				{Toggle = Phase1ToggleDET}
			]
			Mode = All
			//Invert = true
		}
		
		Phase2Toggle
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = IsOperational}
				{Toggle = Phase2ToggleDET}
			]
			Mode = All
			//Invert = true
		}
		
		Phase1ToggleDET
		{
			Type = HealthToggle
			MinHealthFraction = 0.75
			MaxHealthFraction = 1
		}

		Phase2ToggleDET
		{
			Type = HealthToggle
			MinHealthFraction = 0
			MaxHealthFraction = 0.75
		}
		
		ShieldingOn
		{
			Type = MultiToggle
			Toggles = [IsOperational, ShieldStorage]
			Mode = All
		}
		
		ShieldStorage
		{
			Type = ResourceStorage
			ResourceType = fake
			MaxResources = 18000 * 4
			ToggleOnResources = 17001 * 4
			StartingResources = &MaxResources
			InitToMaxResources = &MaxResources
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		
		ShieldGen
		{
			Type = ResourceConverter
			ToStorage = ShieldStorage
			ToQuantity = 8000
			Interval = 1
		}

		ProgressBar95
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = ShieldStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		ArcShield
		{
			Type = ArcShield
			Radius = 5
			Arc = 360d
			OperationalToggle = ShieldingOn
			PenetrationResistance = [99, 50]
			DrainResourcesFrom = ShieldStorage
			ResourceDrainPerDamage = .5
			Rotation = -90d
			Location = [1.5, 1.5]

			BlueprintArcSprite
			{
				Texture
				{
					File = "./data/ships/terran/shield_gen_small/shield_energy.png"
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [0, 0, 255, 127]
			}
			BlueprintArcSpriteSegments = 64

			CoverageArcSprite
			{
				Texture
				{
					File = "./data/ships/terran/shield_gen_small/shield_energy.png"
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [255, 255, 255, 127]
			}
			CoverageArcSpriteSegments = 64

			ShieldMediaEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = .8
					FadeOutTime = .8
					FadeFromScale = .8
					ArcSprite
					{
						Texture
						{
							File = "../new_shield_energy.png"
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "./data/ships/terran/shield_gen_small/shield.shader"
						_waveTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "../new_shield_mask.png"
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 8
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .4
						_waveCurveUOffsetPerSecond = .2
						_fullPowerColor1 = [192, 0, 12, 127]
						_lowPowerColor1 = [255, 0, 0, 200]
						_fullPowerColor2 = [255, 5, 54, 127]
						_lowPowerColor2 = [230, 20, 150, 127]
						_lowPowerThicknessExponent = .6
						_xScale = 1
						TargetBlendMode = Add
						Size = [0, 2]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}

				: /BASE_SOUNDS/AudioExteriorDetail
				{
					Sound = "./data/ships/terran/shield_gen_small/shield_loop.wav"
					Volume = .15
					Speed = .5
					MaxConcurrent = 1
					MaxConcurrentVolume = .3
					DynamicVolume : ^/0/DynamicVolume
					{
						MinDistance = .75
						MaxDistance = 1.5
					}
					IgnoreIntensity = true
				}
			]

			HitMediaEffects
			[
				{
					Type = ArcShield
					FadeInTime = .1
					FadeOutTime = .5
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = 20d
					ArcSprite
					{
						Texture
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_original.png"
							SampleMode = Linear
							MipLevels = max
						}
						Shader = "./data/ships/terran/shield_gen_small/shield.shader"
						_waveTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_original.png"
							SampleMode = Linear
							MipLevels = max
						}
						_waveSpeed = -2
						_waveAlpha = .75
						_waveCurveInterval = 1
						_waveCurveMagnitude = .5
						_waveCurveUOffsetPerSecond = 0
						//TargetBlendMode = Add
						_fullPowerColor1 = [192, 0, 12, 127]
						_lowPowerColor1 = [255, 0, 0, 200]
						_fullPowerColor2 = [255, 5, 54, 127]
						_lowPowerColor2 = [230, 20, 150, 127]
						_lowPowerThicknessExponent = .6
						_xScale = 1
						TargetBlendMode = Add
						Size = [0, 2]
					}
					ArcSpriteSegments = 6
					Bucket = Upper3
				}

				: /BASE_SOUNDS/AudioExterior
				{
					RandomSounds = &<./data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ArcShield/HitMediaEffects/1/RandomSounds
					Volume = 1
					Speed = 1
					IgnoreIntensity = true
					SpeedVariation = .25
					MaxConcurrent = 10
				}
			]
		}

		ShieldOperationEffects
		{
			Type = ToggleEffects
			ChainedTo = ArcShield
			Location = [&~/Part/Components/ArcShield/Radius, 0]
			Toggle = ShieldingOn
			ToggledOnMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/shield_gen_small/activate.wav"
					Volume = .5
					Speed = 1
					IgnoreIntensity = true
				}
			]
			ToggledOffMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/shield_gen_small/deactivate.wav"
					Volume = .5
					Speed = 1
					IgnoreIntensity = true
				}
			]
		}
		
		OperationalComponents
		{
			Type = ToggledComponents
			Toggle = IsOperational
			IncludeInBlueprints = false
			Components
			{
				Graphics
				{
					Type = Graphics
					Location = [1.5, 1.5]
					Floor
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightball.png"
								Size = [6, 6]
								RotSpeed = 180d
								SampleMode = Linear
								VertexColor = [255, 50, 50]
							}
						]
					}
					Walls
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightball.png"
								Size = [6.1, 6.1]
								RotSpeed = -100d
								SampleMode = Linear
								VertexColor = [255, 50, 50]
							}
						]
					}
					OperationalDoodad
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightballs.png"
								Size = [6, 6]
								RotSpeed = -80d
								SampleMode = Linear
								VertexColor = [255, 50, 50]
							}
						]
					}
					OperationalLighting
					{
						Layer = "secondary"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "bigevilring.png"
								Size = [9, 9]
								RotSpeed = 120d
							}
						]
					}
					Roof
					{
						Layer = "asteroid_roof_lights_fancy"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [19, 19]
								Z = 2.0 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*2.25, 255*0, 255*0]
							}
						]
					}
				}
			}
		}
		
		UnOperationalComponents
		{
			Type = ToggledComponents
			Toggle = IsNotOperational
			//InvertOperationalToggle = false
			IncludeInBlueprints = false
			Components
			{
				Graphics2
				{
					Type = Graphics
					Location = [1.5, 1.5]
					Floor
					{
						Layer = "asteroid"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../deadball.png"
								NormalsFile = "../deadball_n.png"
								Size = [6, 6]
								RotSpeed = 0d
							}
						]
					}
				}
			}
		}
		
		/*Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "lightball.png"
						Size = [2.15, 2.15]
						RotSpeed = 180d
						SampleMode = Linear
					}
				]
			}
			Walls
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "lightball.png"
						Size = [2.15, 2.15]
						RotSpeed = -100d
						SampleMode = Linear
					}
				]
			}
			OperationalDoodad
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "lightballs.png"
						Size = [2.8, 2.8]
						RotSpeed = -120d
						SampleMode = Linear
					}
				]
			}
			Roof
			{
				Layer = "asteroid_roof_lights_fancy"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [10, 10]
						Z = 1.0 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*2.25, 255*2.25, 255*2.25]
					}
				]
			}
		}*/
		
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		
		Turret
		{
			Type = TurretWeapon
			Location = [1.5, 1.5]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 8
			FiringArc = 360d
			RotateSpeed = 360d
			FireThresholdAngle = 1d
			AIFirepowerRating = 4800 *16
			Emitter = BulletEmitter
			FirePermissionToggle = FireModeToggle
			HoldTargetAfterCancel = &../BulletEmitter/FireDelay
			AutoTargetCrewSafetyDist = 8

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 64, 64, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Turret
		}

		BulletEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [1.8, 0]
			OperationalToggle = IsOperational
			FireDelay = 0
			Bullet = &<shots/Sunbombp1.rules>
			Spread = [-3.5d, 3.5d]
			//ResourceStorage = BatteryStorage
			//ResourcesUsed = 200
			//MinResourcesUsed = 1
		}
		
		DoubleEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [1.8, 0]
			OperationalToggle = Phase2Toggle
			FireDelay = 1
			Bullet = &<shots/Sunbombp1.rules>
			Spread = [-8d, 8d]
			//ResourceStorage = BatteryStorage
			//ResourcesUsed = 200
			//MinResourcesUsed = 1
		}

		/*ChargeEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			Location = [0.5, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/railgun_launcher/rail.wav"
					Volume = .3
				}
			]
		}*/

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = BulletEmitter
			Location = [0, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&<../Particles/bigflashfourth.rules>
				//&<particles/laser_blaster_small_shoot_flash.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/railgun_loader/shoot.wav"
					Volume = 2.5
					SpeedVariation = .25
				}
			]
		}
		
		FireEffect2 : &FireEffect
		{
			Trigger = DoubleEmitter
		}
		
		DestroyedEffects : &<../base_part_occult.rules>/Part/Components/DestroyedEffects
		{
			Location = [1.5, 1.5]
			HitEffects
			[
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death
					TotalDrain = -2000
					Radius = 12
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
			]
		}
		
		DestroyedEffectsDeathBySigil : &<../base_part_occult.rules>/Part/Components/DestroyedEffectsDeathBySigil
		{
			Location = [1.5, 1.5]
			HitEffects
			[
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death
					TotalDrain = -2000
					Radius = 12
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
			]
		}
		
		OperationSoundLoop
		{
			Type = ContinuousEffects
			Location = [1, 1]
			OperationalToggle = Phase2Toggle
			MediaEffects
			[
				&<Particles/BrimSphere_smoking.rules>
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "haloring.png"
			Size = [4, 4]
		}
	}
}