Part : <../base_part_occult.rules>/Part
{
	NameKey = "Parts/MegaSigilBrimstoneBossLegacy"
	DescriptionKey = "Parts/MegaSigilBrimstoneBossLegacyDesc"
	ID = janiTNT.megasigil4x2_brimstoneboss_legacy // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "BossParts"
	Resources
	[
		//[steel, 8 * 32]
		[hyperium, 128]
	]
	ReceivableBuffs : ^/0/ReceivableBuffs [JaniOrbDetectionBrimstoneBoss]
	Density = 3
	SelectionPriority = 1
	AIValueFactor = 10 // Makes the AI destroy the small ones first i think i hope idk
	SelectionTypeID = "sigils"
	EditorReplacementPartID = "janiTNT.megarockarmor_1x1"
	MaxHealth = 32000 * 75
	UnderlyingPartPerTile = ""
	ContiguityOriginPriority = 1
	UnderlyingPart = janiTNT.lootorb_brimstone
	DestroyedPartHealthFraction = 100%
	Size = [4, 2]
	TypeCategories = [armor, command, boss_resistant]
	InitialPenetrationResistance = 50
	ContinuingPenetrationResistance = 50
	ExplosiveDamageAbsorption = 100%
	DamageResistances = {explosive = 60%, salvage = 100%}
	EditorIcon
	{
		Texture = "../sigilicon.png"
		Size = [100, 50]
	}
	Components : ^/0/Components
	{
		Phase2Toggle
		{
			Type = MultiToggle
			Toggles = [Phase2ToggleDET, OperationalEnemyToggle]
			Mode = All
		}
		NotPhase2Toggle
		{
			Type = MultiToggle
			Toggles = [NotPhase2ToggleDET, OperationalEnemyToggle]
			Mode = All
		}
		Phase2ToggleDET
		{
			Type = MultiToggle
			Toggles = [NotPhase2ToggleDET]
			Mode = All
			Invert = true
		}
		NotPhase2ToggleDET
		{
			Type = BuffToggle
			BuffType = JaniOrbDetectionBrimstoneBoss
			MinBuffValue = 1
			MaxBuffValue = 999999999
		}
		
		DetectorBuffProvider
		{
			Type = GridBuffProvider
			OperationalToggle = Phase2Toggle
			BuffType = JaniPhase2BrimstoneBoss
			GridDistance = 2000
			AllowDiagonals = true
			BuffAmount = 1
		}
		
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		
		DummyEmitter2 : <../Cosmilite/Shots/Beam3.rules>
		{
			Type = BeamEmitter
			ChainedTo = Turret
			Location = [0, 0]
			Range = 8000
			FireTrigger
			GetTargetFrom
			Duration = 0
		}
		
		Turret
		{
			Type = TurretWeapon
			Location = [2, 1]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = NormalAttacksToggle
			AutoFireToggle = AutoFireToggle
			FireInterval = 20
			FiringArc = 360d
			RotateSpeed = 400d
			FireThresholdAngle = 45d
			IgnoreSourceShipLowLOSChecks = true
			AIFirepowerRating = 20000
			TargetingEmitter = DummyEmitter2
			FirePermissionToggle = FireModeToggle
			HoldTargetAfterCancel = 2

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = NormalAttacksToggle
			ShowProgressFor = Turret
		}

		HypernukeEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			Location = [0, 0]
			FireTrigger = Turret
			GetTargetFrom = Turret
			OperationalToggle = NormalAttacksToggle
			//FireDelay = 0.5
			Bullet = &<shots/Hypernuke.rules>
			//Spread = [-1.5d, 1.5d]
		}
		
		WallsEmiiter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			Location = [0, 0]
			FireTrigger = InitiateWalls
			GetTargetFrom = ProximityWeapon
			OperationalToggle = NotPhase2Toggle
			FireDelay = 5
			Bullet = &<shots/Crosshair.rules>
		}
		
		WallsEmiiterPhase2
		{
			Type = BulletEmitter
			ChainedTo = Turret
			Location = [0, 0]
			FireTrigger = InitiateWalls
			GetTargetFrom = ProximityWeapon
			OperationalToggle = Phase2Toggle
			FireDelay = 5
			Bullet = &<shots/Crosshair2.rules>
		}
		
		// Dart Burst attack
		
		
		EmitterFanArcController
		{
		    Type = FanArcController
		    ChainedTo = Turret
		    GetTargetFrom = ProximityWeapon
		    MaxArc = 60d
			MinArc = 60d
		    DefaultArc = &MaxArc
		    ArcSizeFactor = 75%
		    FanComponents
		    [
		        DartEmitter2,
		        DartEmitter3,
				DartEmitter4,
				DartEmitter5,
		        DartEmitter,
				DartEmitter6,
				DartEmitter7,
				DartEmitter8,
				DartEmitter9
		    ]
		}

		DartEmitter
		{
			Type = BulletEmitter
			ChainedTo = EmitterFanArcController
			Location = [1.5, 0]
			FireTrigger = DartsCharged
			GetTargetFrom = Turret
			OperationalToggle = PowerToggle
			FireDelay = 0.75
			Bullet = &<shots/brimstonedart.rules>
			//Spread = [-1.5d, 1.5d]
		}

		// Note: When adding or removing emitters, make sure to update BeamCount at the top of this file as well.
		DartEmitter2  = &DartEmitter
		DartEmitter3  = &DartEmitter
		DartEmitter4  = &DartEmitter
		DartEmitter5  = &DartEmitter
		DartEmitter6  = &DartEmitter
		DartEmitter7  = &DartEmitter
		DartEmitter8  = &DartEmitter
		DartEmitter9  = &DartEmitter
		
		DartsCharged
		{
			Type = Timer
			OperationalToggle = OperationalEnemyToggle
			Duration = 10
			AutoStart = true
			Repeats = true
		}
		
		DartsEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = DartsCharged
			Location = [0, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&<../particles/bigflashfourth.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/gui/game/ftl_ready.wav"
					Volume = 2
					Speed = 1
				}
			]
		}
		
		FireBlastCharged
		{
			Type = Timer
			OperationalToggle = OperationalEnemyToggle
			Duration = 20
			AutoStart = true
			Repeats = true
		}
		
		GigaBlastCharged
		{
			Type = Timer
			OperationalToggle = OperationalEnemyToggle
			Duration = 50
			AutoStart = true
			Repeats = true
		}
		
		FireBlastEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			Location = [0, 0]
			FireTrigger = FireBlastCharged
			GetTargetFrom = Turret
			OperationalToggle = OperationalEnemyToggle
			FireDelay = 0.5
			Bullet = &<shots/brimstonefireblast.rules>
		}
		
		GigaBlastEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			Location = [0, 0]
			FireTrigger = GigaBlastCharged
			GetTargetFrom = Turret
			OperationalToggle = OperationalEnemyToggle
			FireDelay = 3
			Bullet = &<shots/brimstonegigablast.rules>
		}
		
		InitiateWalls
		{
			Type = ToggleTrigger
			Toggle = WallsAttack
			TriggerWhenOff = false
			TriggerWhenOn = true
		}
		
		/*WallsTicker
		{
			Type = Timer
			OperationalToggle = FlamethrowerToggle
			Duration = 0.3
			AutoStart = true
			Repeats = true
		}*/
		
		DisablingBuffProvider
		{
			Type = GridBuffProvider
			BuffType = JaniWeaponsDisabledBossSecondary
			GridDistance = 100
			AllowDiagonals = true
			BuffAmount = 1
			OperationalToggle = WallsDisabler
		}
		
		DisablingBuffProvider2//yeah i ended up just using the default because of the thruster issue
		{
			Type = GridBuffProvider
			BuffType = JaniWeaponsDisabledBoss
			GridDistance = 100
			AllowDiagonals = true
			BuffAmount = 1
			OperationalToggle = WallsDisabler
		}
		
		SwapIncrementTimer
		{
			Type = Timer
			//OperationalToggle = PowerToggle //honestly just better tbh
			OperationalToggle = EnemyPresenceToggle //experiment
			Duration = 20
			AutoStart = true
			Repeats = true
		}
		
		AttacksCycle
		{
			Type = ModeCycle
			ModeRange = [0, 3]
			IncrementTrigger = SwapIncrementTimer
			StartingMode = 1 // Start doing walls.
		}
		
		NormalAttacks
		{
			Type = ModeToggle
			Mode = AttacksCycle
			OnModes = [0, 1, 2] // cut off before second half of walls attack
		}
		
		NormalAttacksToggle
		{
			Type = MultiToggle
			Toggles = [NormalAttacks, EnemyPresenceToggle, PowerToggle]
			Mode = All
		}
		
		WallsAttack
		{
			Type = ModeToggle
			Mode = AttacksCycle
			OnModes = [2, 3] // Fires Walls
		}
		
		WallsAttackToggle
		{
			Type = MultiToggle
			Toggles = [WallsAttack, EnemyPresenceToggle, PowerToggle]
			Mode = All
		}
		
		WallsDisabler
		{
			Type = ModeToggle
			Mode = AttacksCycle
			OnModes = [3] // Halt and let the blood flow.
		}
		
		HaloGraphics
		{
			Type = Graphics
			OperationalToggle = WallsDisabler
			Location = [2, 1]
			OperationalDoodad
			{
				Layer = "secondary"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "bigevilring.png"
						Size = [12, 12]
						RotSpeed = 90d
					}
				]
			}
			OperationalLighting
			{
				Layer = "secondary"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "StarDawn.png"
						Size = [18, 18]
						RotSpeed = -60d
					}
				]
			}
		}
		
		ProximityWeapon
		{
			Type = TurretWeapon
			Location = [2, 1]
			Rotation = 0d
			FireInterval = 0
			FiringArc = 0d
			ValidArc = 360d
			FireThresholdAngle = 0d
			RotateSpeed = 0d
			IgnoreSourceShipLowLOSChecks = true
			IgnoreJunkLOSChecks = true
			InstantSearchesAfterTargetLost = 5
			CanBeGivenExplicitTarget = false
			ShowTargetButtons = false

			AIFirepowerRating = 0
			TargetingEmitter = ProximityEmitter

			AutoTargets
			[
				{
					TargetType = ShipCenters
				}
			]
		}

		ProximityEmitter : <../Cosmilite/Shots/Beam3.rules>
		{
			Type = BeamEmitter
			ChainedTo = ProximityWeapon
			Location = [0, 0]
			Range = 8000
			FireTrigger
			GetTargetFrom
			Duration = 0
		}

		// For DistanceThreshold components, when no enemy is targeted, the distance is 0.
		// Get around this issue by checking a lower bound of 0.5 (that should only include inside the ship)
		DistanceToggleNear
		{
			Type = DistanceThreshold
			GetDistanceFrom = ProximityWeapon
			ThresholdDistance = 0.5
		}
		DistanceToggleFar
		{
			Type = DistanceThreshold
			GetDistanceFrom = ProximityWeapon
			ThresholdDistance = 3000
			InvertToggle = true
		}

		EnemyPresenceToggle
		{
			Type = MultiToggle
			Toggles = [DistanceToggleNear, DistanceToggleFar]
			Mode = All
		}
		
		OperationalEnemyToggle
		{
			Type = MultiToggle
			Toggles = [EnemyPresenceToggle, PowerToggle]
			Mode = All
		}
		
		ParryModule
		{
			Type = TurretWeapon
			Location = [2, 1]
			Rotation = -90d
			OperationalToggle = PowerToggle
			//AutoFireToggle = AutoFireToggle
			FireInterval = 1.5
			FiringArc = 360d
			RotateSpeed = infinity
			FireThresholdAngle = 1d
			AIFirepowerRating = 0
			Emitter = ParryModuleEmitter
			FirePermissionToggle = PowerToggle
			CanBeGivenExplicitTarget = false
	
			AlwaysShowCoverage = false
			AllowDirectControl = false
			IgnoreSourceShipLowLOSChecks = true
			IgnoreJunkLOSChecks = true

			AutoTargets
			[
				{
					TargetType = Bullets
					BulletTargetCategories = [parry_targetable]
				}
			]
		}

		ParryModuleEmitter
		{
			Type = BulletEmitter
			ChainedTo = ParryModule
			FireTrigger = ParryModule
			GetTargetFrom = ParryModule
			Location = [0, 0]
			OperationalToggle = PowerToggle
			Bullet = &<../Parry.rules>
			Spread = [0d, 0d]
			FireDelay = .5
		}
		
	//Boss Specific
	
	
		Sprite : &<../armoroid.rules>/Part/Components/Sprite
		{
			Type = SpriteGrid
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		
		CommandProvider
		{
			Type = CommandProvider
			OperationalToggle = PowerToggle
			CommandPoints = 400
		}
		
		Sensor
		{
			Type = Sensor
			OperationalToggle = PowerToggle
			SightRadius = 1600
			RadarRadius = 3200
		}
		
		BoomStorage2: &<../base_part_occult_2.rules>/Part/Components/BoomStorage
		{
		}

		BoomMultiToggle
		{
			Type = MultiToggle
			Toggles = [BoomStorage, BoomStorage2]
			Mode = Any
			Invert = false
		}

		DetonateTrigger: &<../base_part_occult.rules>/Part/Components/DetonateTrigger
		{
			Type = Timer
			OperationalToggle = BoomMultiToggle
			Duration = 0.5
			AutoStart = true
			Repeats = true
		}

		Graphics
		{
			Type = Graphics
			//OperationalToggle = IsOperational
			Location = [2, 1]
			OperationalDoodad
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = false
				DamageLevels
				[
					{
						File = "bosssigil.png"
						Size = [4, 2]
					}
				]
			}
		}
		
		DestroyedEffectsDeathBySigil
		{
			Type = DeathEffects
			//OperationalToggle = BoomStorage
			HitEffects
			[
				/*{
					Type = ExplosiveDamage
					TotalDamage = 600000
					Radius = 20
					ExpandDuration = .8
					ExpandStartRadius = 1
					RadiusEffectScaleExponent = 0.5
					ImpulsePerNDamage = 10
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
						Self = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 60000
					Radius = 8
					ExpandDuration = .8
					ExpandStartRadius = 1
					RadiusEffectScaleExponent = 0.5
					ImpulsePerNDamage = 5
					NDamage = 1000
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
						Self = true
					}
				}*/
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death
					TotalDrain = -5120 * 8
					Radius = 20
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death2
					TotalDrain = -5120 * 8
					Radius = 20
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
			]
			Location = [2, 1]
		}
		
		SalvagedEffects
		{
			Type = DeathEffects
			Location = [2, 1]
			WhenSalvaged = true
			
			HitEffects
			[
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death
					TotalDrain = -5120 * 8
					Radius = 20
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death2
					TotalDrain = -5120 * 8
					Radius = 20
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
			]
			MediaEffectsScale = 2.5
			MediaEffects
			[
				&<./data/shots/missile_nuke/particles/missile_nuke_flash_light.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_flash.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_shockwave.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_hit.rules>
				//&<particles/missile_nuke_smoke.rules>
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/shots/missile_nuke/missile_nuke_hit.wav"
					Volume = 1
				}
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/common/ftl_jump_in.wav"
					Volume = 5
					Speed = 0.25
				}

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/shots/missile_nuke/missile_nuke_hit.wav"
					Volume = 1
				}
				
				//&<quarter_huge_part_exploding.rules>
				//&<salvage_complete_shrapnel_occult.rules>
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/common_effects/sounds/big_part_destroyed.wav"
					Volume = 1
					SpeedVariation = .25
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .8
					Duration = 8
				}
			]
		}

		
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffectsScale = 2.5
			MediaEffects
			[
				&<./data/shots/missile_nuke/particles/missile_nuke_flash_light.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_flash.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_shockwave.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_hit.rules>
				//&<particles/missile_nuke_smoke.rules>
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/shots/missile_nuke/missile_nuke_hit.wav"
					Volume = 1
				}
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/common/ftl_jump_in.wav"
					Volume = 5
					Speed = 0.25
				}

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/shots/missile_nuke/missile_nuke_hit.wav"
					Volume = 1
				}
				
				//&<quarter_huge_part_exploding.rules>
				//&<salvage_complete_shrapnel_occult.rules>
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/common_effects/sounds/big_part_destroyed.wav"
					Volume = 1
					SpeedVariation = .25
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .8
					Duration = 8
				}
			]
			Location = [2, 1]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../sigilbp.png"
			Size = [4, 2]
		}
	}
}