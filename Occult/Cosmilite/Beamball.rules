Part : <../base_part_occult.rules>/Part
{
	NameKey = "Parts/MegaroidBallWeaponCosmiliteBoss"
	DescriptionKey = "Parts/MegaroidBallWeaponCosmiliteBossDesc"
	ID = janiTNT.lightball_4x4_cosmilite_boss // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = ["janiTNT.lightball_4x4_boss"]
	EditorGroup = "BossParts"
	Resources
	[
		[hyperium, 128]
	]
	ReceivableBuffs : ^/0/ReceivableBuffs [JaniWeakpointDetector]
	Density = 3
	AIValueFactor = 32
	MaxHealth = 32000 * 32
	EditorReplacementPartID = ""
	Size = [2, 4]
	SelectionPriority = 1
	SelectionTypeID = "weapons"
	IsRotateable = true
	TypeCategories = [armor, weapon]
	InitialPenetrationResistance = 50
	ContinuingPenetrationResistance = 50
	ExplosiveDamageAbsorption = 100%
	DamageResistances = {explosive = 50%}
	GenerateRectCollider = false
	IsExternal = true
	ExternalWalls = [None]
	InternalWalls = [All]
	IsWalled = false
	EditorIcon
	{
		Texture = "../light_icon.png"
		Size = [85, 85]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		
		ShieldingOn
		{
			Type = MultiToggle
			Toggles = [ActiveWeakpoints, ShieldStorage]
			Mode = All
		}
		NoWeakpoints
		{
			Type = MultiToggle
			Toggles = [ActiveWeakpoints]
			Mode = All
			Invert = true
		}
		ActiveWeakpoints
		{
			Type = BuffToggle
			BuffType = JaniWeakpointDetector
			MinBuffValue = 1
			MaxBuffValue = 999999999
		}
		
		ShieldStorage
		{
			Type = ResourceStorage
			ResourceType = fake
			MaxResources = 18000 * 4
			ToggleOnResources = 17001 * 4
			StartingResources = &MaxResources
			InitToMaxResources = &MaxResources
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		
		ShieldGen
		{
			Type = ResourceConverter
			ToStorage = ShieldStorage
			ToQuantity = 8000
			Interval = 1
		}

		ProgressBar95
		{
			Type = ProgressBar
			OperationalToggle = ActiveWeakpoints
			ShowProgressFor = ShieldStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		ArcShield
		{
			Type = ArcShield
			Radius = 4
			Arc = 270d
			OperationalToggle = ShieldingOn
			PenetrationResistance = [99, 50]
			DrainResourcesFrom = ShieldStorage
			ResourceDrainPerDamage = .5
			Rotation = -90d
			Location = [1, 2]

			BlueprintArcSprite
			{
				Texture
				{
					File = "./data/ships/terran/shield_gen_small/shield_energy.png"
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [0, 0, 255, 127]
			}
			BlueprintArcSpriteSegments = 64

			CoverageArcSprite
			{
				Texture
				{
					File = "./data/ships/terran/shield_gen_small/shield_energy.png"
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [255, 255, 255, 127]
			}
			CoverageArcSpriteSegments = 64

			ShieldMediaEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = .25
					FadeOutTime = .25
					FadeFromScale = .8
					ArcSprite
					{
						Texture
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy.png"
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "./data/ships/terran/shield_gen_small/shield.shader"
						_waveTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_mask.png"
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 8
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .4
						_waveCurveUOffsetPerSecond = .2
						_fullPowerColor1 = [54, 0, 91, 127]
						_lowPowerColor1 = [54, 0, 91, 127]
						_fullPowerColor2 = [0, 127, 255, 127]
						_lowPowerColor2 = [255, 0, 0, 127]
						_lowPowerThicknessExponent = .3
						_xScale = 1
						TargetBlendMode = Add
						Size = [0, 0.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}

				: /BASE_SOUNDS/AudioExteriorDetail
				{
					Sound = "./data/ships/terran/shield_gen_small/shield_loop.wav"
					Volume = .15
					Speed = .5
					MaxConcurrent = 1
					MaxConcurrentVolume = .3
					DynamicVolume : ^/0/DynamicVolume
					{
						MinDistance = .75
						MaxDistance = 1.5
					}
					IgnoreIntensity = true
				}
			]

			HitMediaEffects
			[
				{
					Type = ArcShield
					FadeInTime = .1
					FadeOutTime = .5
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = 20d
					ArcSprite
					{
						Texture
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_original.png"
							SampleMode = Linear
							MipLevels = max
						}
						Shader = "./data/ships/terran/shield_gen_small/shield.shader"
						_waveTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "./data/ships/terran/shield_gen_small/shield_energy_original.png"
							SampleMode = Linear
							MipLevels = max
						}
						_waveSpeed = -2
						_waveAlpha = .75
						_waveCurveInterval = 1
						_waveCurveMagnitude = .5
						_waveCurveUOffsetPerSecond = 0
						//TargetBlendMode = Add
						_fullPowerColor1 = [0, 140, 255, 127]
						_lowPowerColor1 = [255, 0, 0, 200]
						_fullPowerColor2 = [250, 50, 200, 127]
						_lowPowerColor2 = [230, 20, 150, 127]
						_lowPowerThicknessExponent = .3
						_xScale = 1
						TargetBlendMode = Add
						Size = [0, 1]
					}
					ArcSpriteSegments = 6
					Bucket = Upper3
				}

				: /BASE_SOUNDS/AudioExterior
				{
					RandomSounds = &<./data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ArcShield/HitMediaEffects/1/RandomSounds
					Volume = 1
					Speed = 1
					IgnoreIntensity = true
					SpeedVariation = .25
					MaxConcurrent = 10
				}
			]
		}

		ShieldOperationEffects
		{
			Type = ToggleEffects
			ChainedTo = ArcShield
			Location = [&~/Part/Components/ArcShield/Radius, 0]
			Toggle = ShieldingOn
			ToggledOnMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/shield_gen_small/activate.wav"
					Volume = .5
					Speed = 1
					IgnoreIntensity = true
				}
			]
			ToggledOffMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/terran/shield_gen_small/deactivate.wav"
					Volume = .5
					Speed = 1
					IgnoreIntensity = true
				}
			]
		}
		
		BuffProvider
		{
			Type = GridBuffProvider
			BuffType = JaniOrbDetectionCosmiliteBoss
			GridDistance = 40
			AllowDiagonals = true
			BuffAmount = 1
		}
		
		Phase1Toggle
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = IsOperational}
				{Toggle = Phase1ToggleDET}
			]
			Mode = All
			//Invert = true
		}
		
		Phase2Toggle
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = IsOperational}
				{Toggle = Phase2ToggleDET}
			]
			Mode = All
			//Invert = true
		}
		
		Phase3Toggle
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = IsOperational}
				{Toggle = Phase3ToggleDET}
			]
			Mode = All
			//Invert = true
		}
		
		Phase1ToggleDET
		{
			Type = HealthToggle
			MinHealthFraction = 0.6
			MaxHealthFraction = 1
		}

		Phase2ToggleDET
		{
			Type = HealthToggle
			MinHealthFraction = 0
			MaxHealthFraction = 0.6
		}
		
		Phase3ToggleDET
		{
			Type = HealthToggle
			MinHealthFraction = 0
			MaxHealthFraction = 0.35
		}
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, CommandToggle]
			Mode = All
		}
		
		IsNotOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational]
			Invert = true
			Mode = All
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 8
		}
		
		Collider
		{
			Type = CircleCollider
			Location = [1, 2]
			Radius = 1.7
			Density = 5
		}
		
		CommandToggle
		{
			Type = CommandToggle
		}
		
		OperationalComponents
		{
			Type = ToggledComponents
			Toggle = IsOperational
			IncludeInBlueprints = false
			Components
			{
				Graphics
				{
					Type = Graphics
					Location = [1, 2]
					Floor
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightball.png"
								Size = [4, 4]
								RotSpeed = 180d
								SampleMode = Linear
							}
						]
					}
					Walls
					{
						Layer = "asteroid_lights_add"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightball.png"
								Size = [4, 4]
								RotSpeed = -100d
								SampleMode = Linear
							}
						]
					}
					OperationalDoodad
					{
						Layer = "asteroid_lights_add"
						//RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightballs.png"
								Size = [4.6, 4.6]
								RotSpeed = 120d
								SampleMode = Linear
								VertexColor = [255, 0, 155]
							}
						]
					}
					OperationalLighting
					{
						Layer = "asteroid_lights_add"
						//RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../lightballs.png"
								Size = [4.6, 4.6]
								RotSpeed = 120d
								SampleMode = Linear
								VertexColor = [0, 152, 255]
								UVRotation = 1
							}
						]
					}
					Roof
					{
						Layer = "asteroid_roof_lights_fancy"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [18, 18]
								Z = 1.0 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*2.25, 255*2.25, 255*2.25]
							}
						]
					}
				}
			}
		}
		
		UnOperationalComponents
		{
			Type = ToggledComponents
			Toggle = IsNotOperational
			//InvertOperationalToggle = false
			IncludeInBlueprints = false
			Components
			{
				Graphics2
				{
					Type = Graphics
					Location = [1, 2]
					Floor
					{
						Layer = "asteroid"
						RandomUVRotation = true
						DamageLevels
						[
							{
								File = "../deadball.png"
								NormalsFile = "../deadball_n.png"
								Size = [4, 4]
								RotSpeed = 0d
							}
						]
					}
				}
			}
		}
		
		/*Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "lightball.png"
						Size = [2.15, 2.15]
						RotSpeed = 180d
						SampleMode = Linear
					}
				]
			}
			Walls
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "lightball.png"
						Size = [2.15, 2.15]
						RotSpeed = -100d
						SampleMode = Linear
					}
				]
			}
			OperationalDoodad
			{
				Layer = "asteroid_lights_add"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "lightballs.png"
						Size = [2.8, 2.8]
						RotSpeed = -120d
						SampleMode = Linear
					}
				]
			}
			Roof
			{
				Layer = "asteroid_roof_lights_fancy"
				RandomUVRotation = true
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [10, 10]
						Z = 1.0 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [255*2.25, 255*2.25, 255*2.25]
					}
				]
			}
		}*/
		
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		
		Turret
		{
			Type = TurretWeapon
			Location = [1, 2]// Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .2
			FiringArc = 360d
			RotateSpeed = 10d
			FireThresholdAngle = 180d
			AIFirepowerRating = 6000 * 5
			//CanSalvage = true
			//IncludeInFirepowerEstimation = false
			//AlwaysShowCoverage = true
			Emitter = BeamEmitterBase // Doesn't actually fire; only used for targeting.
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLowLOSChecks = true //meth
			IgnoreJunkLOSChecks = true
			//HoldTargetWhileFiring = 0.5
			HoldTargetAfterCancel = 8

			AutoTargets
			[
				//{
				//	TargetType = Salvage
				//	Toggle = AutoTargetToggle
				//}
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}
		
		BeamEmitterBase : <shots/Beam1.rules>
		{
			Type = BeamEmitter
			ChainedTo = Turret
			FireTrigger // none, but field is required
			GetTargetFrom = Turret
			Location = [1.75, 0]
			OperationalToggle = IsOperational
			Duration = .2
			//ResourceStorage = BatteryStorage
			//ResourcesUsed = 120
			//MinResourcesUsed = 1
			Width = abs((&../BeamEmitterLeft/Location/1) - (&../BeamEmitterRight/Location/1)) + (&^/0/Width) / 2
		}
		LeftOscillator
		{
			Type = Oscillator
			ChainedTo = Turret
			OperationalToggle = BeamEmitterLeft
			Location = [-20, 0]
			Angle = -2.5d
			Interval = 6.0
			ResetWhenOperational = false
			//ResetWhenOperational = true
		}
		RightOscillator : LeftOscillator
		{
			OperationalToggle = BeamEmitterRight
			Location = [-20, 0]
			Angle = -(&../LeftOscillator/Angle)
		}
		BeamEmitterLeft : BeamEmitterBase
		{
			ChainedTo = LeftOscillator
			FireTrigger = Turret
			Location = [1.75 + 20, 0]
			OperationalToggle = Phase1Toggle
			//Location = [0, 0]
			Width = &<shots/Beam1.rules>/Width // BeamEmitterBase overrides width for targeting purposes.
		}
		BeamEmitterRight : <shots/Beam2.rules>
		{
			ChainedTo = RightOscillator
			FireTrigger = Turret
			Type = BeamEmitter
			GetTargetFrom = Turret
			Location = [1.75 + 20, 0]
			OperationalToggle = Phase1Toggle
			Duration = .2
			//Location = [0, 0]
			Width = &<shots/Beam2.rules>/Width // BeamEmitterBase overrides width for targeting purposes.
		}
		BeamEmitterCenter : <shots/Beam3.rules>
		{
			ChainedTo = Turret
			FireTrigger = FiringTrigger
			Type = BeamEmitter
			GetTargetFrom = Turret
			Location = [1.735 , 0]
			OperationalToggle = Phase1Toggle
			Duration = 3
			//Location = [0, 0]
			EffectsScaleFactor = CenterBeamScale
		}
		CenterBeamScale
		{
			Type = StaticValue
			Value = 5
		}
		ChargedTrigger
		{
			Type = Timer
			OperationalToggle = BeamEmitterLeft
			Duration = 9
			AutoStart = true
			Repeats = true
		}
		FiringTrigger // force it to fire when both beams converge
		{
			Type = DelayTrigger
			Trigger = ChargedTrigger
			Delay = 1.5
		}
		
		//Deathbolts attack
		
		
		
		//Deathbolts attack
		
		
		EmitterFanArcController
		{
		    Type = FanArcController
		    ChainedTo = Turret
		    GetTargetFrom = Turret
		    MaxArc = 90d
			MinArc = 90d
		    DefaultArc = &MaxArc
		    ArcSizeFactor = 75%
		    FanComponents
		    [
		        BoltEmitter2,
		        BoltEmitter3,
				BoltEmitter4,
				BoltEmitter5,
				BoltEmitter6,
				BoltEmitter7,
				BoltEmitter8,
		        BoltEmitter,
		        BoltEmitter9,
		        BoltEmitter10,
				BoltEmitter11,
				BoltEmitter12,
				BoltEmitter13,
				BoltEmitter14,
				BoltEmitter15
		    ]
		}

		BoltEmitter
		{
			Type = BulletEmitter
			ChainedTo = EmitterFanArcController
			Location = [1.5, 0]
			FireTrigger = BoltsCharged
			GetTargetFrom = Turret
			OperationalToggle = PowerToggle
			FireDelay = 0.75
			Bullet = &<shots/deathbolt.rules>
			//Spread = [-1.5d, 1.5d]
		}

		// Note: When adding or removing emitters, make sure to update BeamCount at the top of this file as well.
		BoltEmitter2  = &BoltEmitter
		BoltEmitter3  = &BoltEmitter
		BoltEmitter4  = &BoltEmitter
		BoltEmitter5  = &BoltEmitter
		BoltEmitter6  = &BoltEmitter
		BoltEmitter7  = &BoltEmitter
		BoltEmitter8  = &BoltEmitter
		BoltEmitter9  = &BoltEmitter
		BoltEmitter10  = &BoltEmitter
		BoltEmitter11  = &BoltEmitter
		BoltEmitter12  = &BoltEmitter
		BoltEmitter13  = &BoltEmitter
		BoltEmitter14  = &BoltEmitter
		BoltEmitter15  = &BoltEmitter
		
		BoltsCharged
		{
			Type = Timer
			OperationalToggle = Phase2BeamEmitterLeft
			Duration = 12
			AutoStart = true
			Repeats = true
		}
		
		BoltEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = BoltsCharged
			Location = [0, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&<../particles/bigflashfourth.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/ships/common/ftl_jump_in.wav"
					Volume = 2
					Speed = 1
				}
			]
		}
		
		
		
		// Phase 2 Beams
		
		Phase2LeftOscillator
		{
			Type = Oscillator
			ChainedTo = Turret
			OperationalToggle = Phase2BeamEmitterLeft
			Location = [-20, 0]
			Angle = -1d
			Interval = 3.0
			ResetWhenOperational = false
			//ResetWhenOperational = true
		}
		Phase2RightOscillator : Phase2LeftOscillator
		{
			OperationalToggle = Phase2BeamEmitterRight
			Location = [-20, 0]
			Angle = -(&../Phase2LeftOscillator/Angle)
		}
		Phase2BeamEmitterLeft : BeamEmitterBase
		{
			ChainedTo = Phase2LeftOscillator
			FireTrigger = Turret
			Location = [1.75 + 20, 0]
			OperationalToggle = Phase2Toggle
			//Location = [0, 0]
			Width = &<shots/Beam1.rules>/Width // BeamEmitterBase overrides width for targeting purposes.
		}
		Phase2BeamEmitterRight : <shots/Beam2.rules>
		{
			ChainedTo = Phase2RightOscillator
			FireTrigger = Turret
			Type = BeamEmitter
			GetTargetFrom = Turret
			Location = [1.75 + 20, 0]
			OperationalToggle = Phase2Toggle
			Duration = .2
			//Location = [0, 0]
			Width = &<shots/Beam2.rules>/Width // BeamEmitterBase overrides width for targeting purposes.
		}
		Phase2BeamEmitterCenter : <shots/Beam3.rules>
		{
			ChainedTo = Turret
			FireTrigger = Phase2FiringTrigger
			Type = BeamEmitter
			GetTargetFrom = Turret
			Location = [1.735 , 0]
			OperationalToggle = Phase2Toggle
			Duration = 3
			//Location = [0, 0]
			EffectsScaleFactor = CenterBeamScale
		}
		Phase2ChargedTrigger
		{
			Type = Timer
			OperationalToggle = Phase2BeamEmitterLeft
			Duration = 6
			AutoStart = true
			Repeats = true
		}
		Phase2FiringTrigger // force it to fire when both beams converge
		{
			Type = DelayTrigger
			Trigger = Phase2ChargedTrigger
			Delay = 0.75
		}	
		
		
		//Cosmic Guardian Spawner
		
		Phase3GuardianSpawnerTimer
		{
			Type = Timer
			OperationalToggle = Phase2BeamEmitterLeft
			Duration = 3
			AutoStart = true
			Repeats = true
		}
		
		GuardianYeeterModuleSuperExOmegaFireSuperDuperCoolComponentNameINeedMoreSleepEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			Location = [0, 0]
			FireTrigger = Phase3GuardianSpawnerTimer
			GetTargetFrom = Turret
			OperationalToggle = Phase3Toggle
			//FireDelay = 0.75
			Bullet = &<shots/cosmicguardianspawner.rules>
			Spread = [-360d, 360d]
		}
		
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects
			[
				&<./data/shots/missile_nuke/particles/missile_nuke_flash_light.rules>
				&<./data/shots/missile_nuke/particles/missile_nuke_flash.rules>
				&<../Particles/quarter_huge_part_exploding.rules>
				&<../Particles/salvage_complete_shrapnel_occult.rules>
				
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./data/common_effects/sounds/big_part_destroyed.wav"
					Volume = 1
					SpeedVariation = .25
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .15
					Duration = 1
				}
			]
			Location = [.5, 1.5]
		}
		
		DestroyedEffectsDeathBySigil
		{
			Type = DeathEffects
			Location = [.5, 1.5]
			HitEffects
			[
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death
					TotalDrain = -640 * 32
					Radius = 22
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
				{
					Type = ExplosiveResourceDrain
					ResourceType = sigil.death2
					TotalDrain = -640 * 32
					Radius = 22
					Slices = 1
					Filter
					{
						Ships = true
						Shields = true
						Friendlies = true
						Self = true
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "./data/ships/asteroid/rock/rock_1x1_blueprints.png"
			Size = [2, 4]
		}
	}
}