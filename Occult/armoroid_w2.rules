Part : <base_part_occult.rules>/Part
{
	NameKey = "Parts/MegaroidArmorWedge1x2"
	DescriptionKey = "Parts/MegaroidArmorDesc"
	ID = janiTNT.megarockarmor_1x1_wedge_1x2 // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	SelectionTypeID = "armor"
	EditorGroup = "BossParts"
	Resources = []
	MaxHealth = 32000
	Size = [1, 2]
	IsFlippable = true
	IsRotateable = true
	EditorReplacementPartID = janiTNT.megarockarmor_1x1
	AllowedContiguity = [Right, Bottom]
	FlipHRotate = [0, 3, 2, 1]
	FlipVRotate = [2, 1, 0, 3]
	GenerateRectCollider = false
	TypeCategories = [armor, boss_resistant]
	InitialPenetrationResistance = 2 * 7
	ContinuingPenetrationResistance = 2 * 7
	ExplosiveDamageAbsorption = 100%
	DamageResistances = {explosive = 25%}

	ReceivableBuffs : ^/0/ReceivableBuffs []
	ExternalWallsByCell
	[
		{
			Key = [0, 0]
			Value = [TopRight, Right]
		}
		{
			Key = [0, 1]
			Value = [Right, BottomRight, Bottom, BottomLeft]
		}
	]
	InternalWallsByCell
	[
	 	{
	 		Key = [0, 0]
	 		Value = [BottomLeft, Left, TopLeft, Top]
	 	}
	 	{
	 		Key = [0, 1]
	 		Value = [Left, TopLeft]
	 	}
	]
	VirtualInternalCells
	[
		{ExternalCell=[0, -1]; InternalCell=[1, 0]}
		{ExternalCell=[-1, 1]; InternalCell=[0, 2]}
	]
	AllowedDoorLocations = []
	GeneratorRequiresDoor = false
	EditorIcon
	{
		Texture = "armoroid_W2_icon.png"
		Size = [32, 64]
	}
	Components : <./data/ships/megaroid/megarock/megarock_1x2_wedge.rules>/Part/Components
	{
		Collider
		{
			Type = PolygonCollider
			Vertices
			[
				[1, 0]
				[1, 2]
				[0, 2]
				[0.42, 1.1]
				[0.47, 0.56]
			]
			Density = 3
		}
		BoomStorage
		{
			Type = ResourceStorage
			ResourceType = sigil.death
			MaxResources = 320
			ToggleOnResources = 320
			InitToMaxResources = 0
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BoomStorage2
		{
			Type = ResourceStorage
			ResourceType = sigil.death2
			MaxResources = 320
			ToggleOnResources = 320
			InitToMaxResources = 0
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		DetonateTrigger
		{
			Type = Timer
			OperationalToggle = BoomMultiToggle
			Duration = 0.75
			AutoStart = true
			Repeats = true
		}
		
		BoomMultiToggle
		{
			Type = MultiToggle
			Toggles = [BoomStorage, BoomStorage2]
			Mode = Any
			Invert = false
		}
		
		
		DetonateEffects
		{
			// This just destroys the part, which in turn will trigger the DeathEffects, causing the actual collateral damage.

			Type = TriggeredEffects
			Trigger = DetonateTrigger
			HitEffects
			[
				{
					Type = Damage
					Damage = 999999
					Filter
					{
						Friendlies = true
						IgnoreInvulnerability = false
					}
				}
			]
		}
		DestroyedEffects : &<base_part_occult.rules>/Part/Components/DestroyedEffects
		{
			Location = [.5, 1]
		}
		
		DestroyedEffectsDeathBySigil : &<base_part_occult.rules>/Part/Components/DestroyedEffectsDeathBySigil
		{
			Location = [.5, 1]
			HitEffects = []
		}
	}
}