Part : <base_part_hyperoid.rules>/Part
{
	NameKey = "Parts/HyperoidWedge1x1"
	DescriptionKey = "Parts/RockDesc"
	ID = janiTNT.hyperock_1x1_wedge // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = [juanTNT.hyperock_1x1_wedge]//heh.
	SelectionTypeID = "rock"
	EditorGroup = "Rock"
	Resources = []

	MaxHealth = 80000 * 4*4 *2
	IsRotateable = true
	AllowedContiguity = [Right, Bottom]
	ExternalWalls = [TopRight, Right, BottomRight, Bottom, BottomLeft]
	InternalWalls = [Left, TopLeft, Top]
	VirtualInternalCells
	[
		{ExternalCell=[0, -1]; InternalCell=[1, 0]}
		{ExternalCell=[-1, 0]; InternalCell=[0, 1]}
	]
	FlipHRotate = [1, 0, 3, 2]
	FlipVRotate = [3, 2, 1, 0]
	GenerateRectCollider = false
	AllowedDoorLocations = []
	GeneratorRequiresDoor = false
	IsCrewSalvageable = false

	ReceivableBuffs : ^/0/ReceivableBuffs []
	EditorIcon
	{
		Texture = "rock_1x1_wedge_icon.png"
		Size = [32, 32]
	}
	Components : &<./Data/ships/megaroid/megarock/megarock_1x1_wedge.rules>/Part/Components
	{
		Graphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			Floor
			{
				Layer = "asteroid"
				DamageLevels
				[
					{
						File = "walls15.png"
						NormalsFile = "walls_normals15.png"
						Size = [1, 1]
					}
				]
			}
		}
		
		SpriteGrid1 : &<megarock_4x4.rules>/Part/Components/SpriteGrid1
		{
			Location = [3.5*0.25, 1.5*0.25]
			Type = Sprite
		}
		
		SpriteGrid2 : &<megarock_4x4.rules>/Part/Components/SpriteGrid1
		{
			Location = [2.5*0.25, 2.5*0.25]
			Type = Sprite
		}
		
		SpriteGrid3 : &<megarock_4x4.rules>/Part/Components/SpriteGrid1
		{
			Location = [3.5*0.25, 2.5*0.25]
			Type = Sprite
		}
		
		SpriteGrid4 : &<megarock_4x4.rules>/Part/Components/SpriteGrid1
		{
			Location = [1.5*0.25, 3.5*0.25]
			Type = Sprite
		}

		SpriteGrid5 : &<megarock_4x4.rules>/Part/Components/SpriteGrid1
		{
			Location = [2.5*0.25, 3.5*0.25]
			Type = Sprite
		}
		
		SpriteGrid6 : &<megarock_4x4.rules>/Part/Components/SpriteGrid1
		{
			Location = [3.5*0.25, 3.5*0.25]
			Type = Sprite
		}


		/*TriWall0a
		{
			Type = BlendSprite
			OnlyWithRotation = 0
			Location = [.5, -.5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "*0*0****"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 2
						}
					]
				}
			]
		}
		TriWall0b
		{
			Type = BlendSprite
			OnlyWithRotation = 0
			Location = [-.5, .5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "*****000"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 2
						}
					]
				}
			]
		}
		TriWall1a
		{
			Type = BlendSprite
			OnlyWithRotation = 1
			Location = [.5, -.5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "***0*0**"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 3
						}
					]
				}
			]
		}
		TriWall1b
		{
			Type = BlendSprite
			OnlyWithRotation = 1
			Location = [-.5, .5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "00*****0"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 3
						}
					]
				}
			]
		}
		TriWall2a
		{
			Type = BlendSprite
			OnlyWithRotation = 2
			Location = [.5, -.5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "*****0*0"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 0
						}
					]
				}
			]
		}
		TriWall2b
		{
			Type = BlendSprite
			OnlyWithRotation = 2
			Location = [-.5, .5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "*000****"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 0
						}
					]
				}
			]
		}
		TriWall3a
		{
			Type = BlendSprite
			OnlyWithRotation = 3
			Location = [.5, -.5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "*0*****0"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 1
						}
					]
				}
			]
		}
		TriWall3b
		{
			Type = BlendSprite
			OnlyWithRotation = 3
			Location = [-.5, .5]
			Layer = "asteroid"
			BlendCheckRectType = Physical
			AllowUndefinedBlendSprites = true
			RequireExternalWallsToBlend = true
			AmbiguousSprites
			[
				{
					SituationCode = "***000**"
					AllowRotation = false
					DamageLevels
					[
						{
							File = "walls9.png"
							NormalsFile = "walls_normals9.png"
							Size = [1, 1]
							UVRotation = 1
						}
					]
				}
			]
		}*/
		SalvagedEffects
		{
			Type = DeathEffects
			Location = [.5, .5]
			WhenSalvaged = true

			MediaEffects
			[
				&<salvage_complete_asteroid_pebbles.rules>

				: /BASE_SOUNDS/AudioExteriorDetail
				{
					Sound = "./data/ships/common/salvage_finish.wav"
					Volume = 0.75
					SpeedVariation = .25
				}
			]
		}
		
		DeathEffects : SalvagedEffects
		{
			WhenSalvaged = false
		}
	}
}